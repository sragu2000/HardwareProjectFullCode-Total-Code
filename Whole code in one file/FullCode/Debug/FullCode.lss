
FullCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001d6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000146  00800060  00001d6c  00001e00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000011e  008001a6  008001a6  00001f46  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f46  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001fa4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002281  00000000  00000000  00002138  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007dc  00000000  00000000  000043b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000104b  00000000  00000000  00004b95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000040c  00000000  00000000  00005be0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000764  00000000  00000000  00005fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001879  00000000  00000000  00006750  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00007fc9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__ctors_end>
       4:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
       c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      10:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      14:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      18:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      1c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      20:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      28:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      2c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      30:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      34:	0c 94 c0 07 	jmp	0xf80	; 0xf80 <__vector_13>
      38:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      3c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      40:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      44:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      48:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      4c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
      50:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	4e 41       	sbci	r20, 0x1E	; 30
      56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
      5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
      5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
      77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      87:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
      97:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
      a7:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
      b7:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
      c7:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
      d7:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
      e7:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
      f7:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     107:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     117:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     127:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     137:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     147:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     157:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     167:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     177:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     187:	3d 27 00                                            ='.

0000018a <__ctors_end>:
     18a:	11 24       	eor	r1, r1
     18c:	1f be       	out	0x3f, r1	; 63
     18e:	cf e5       	ldi	r28, 0x5F	; 95
     190:	d8 e0       	ldi	r29, 0x08	; 8
     192:	de bf       	out	0x3e, r29	; 62
     194:	cd bf       	out	0x3d, r28	; 61

00000196 <__do_copy_data>:
     196:	11 e0       	ldi	r17, 0x01	; 1
     198:	a0 e6       	ldi	r26, 0x60	; 96
     19a:	b0 e0       	ldi	r27, 0x00	; 0
     19c:	ec e6       	ldi	r30, 0x6C	; 108
     19e:	fd e1       	ldi	r31, 0x1D	; 29
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__do_copy_data+0x10>
     1a2:	05 90       	lpm	r0, Z+
     1a4:	0d 92       	st	X+, r0
     1a6:	a6 3a       	cpi	r26, 0xA6	; 166
     1a8:	b1 07       	cpc	r27, r17
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <__do_copy_data+0xc>

000001ac <__do_clear_bss>:
     1ac:	22 e0       	ldi	r18, 0x02	; 2
     1ae:	a6 ea       	ldi	r26, 0xA6	; 166
     1b0:	b1 e0       	ldi	r27, 0x01	; 1
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
     1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
     1b6:	a4 3c       	cpi	r26, 0xC4	; 196
     1b8:	b2 07       	cpc	r27, r18
     1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
     1bc:	0e 94 6f 06 	call	0xcde	; 0xcde <main>
     1c0:	0c 94 b4 0e 	jmp	0x1d68	; 0x1d68 <_exit>

000001c4 <__bad_interrupt>:
     1c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c8 <ringAlarm>:
	while (str[i]!='\0')		/* Send string till null */
	{
		USART_TxChar(str[i]);
		i++;
	}
}
     1c8:	82 b3       	in	r24, 0x12	; 18
     1ca:	80 68       	ori	r24, 0x80	; 128
     1cc:	82 bb       	out	0x12, r24	; 18
     1ce:	08 95       	ret

000001d0 <stopAlarm>:
     1d0:	82 b3       	in	r24, 0x12	; 18
     1d2:	8f 77       	andi	r24, 0x7F	; 127
     1d4:	82 bb       	out	0x12, r24	; 18
     1d6:	08 95       	ret

000001d8 <onHazardLight>:
     1d8:	82 b3       	in	r24, 0x12	; 18
     1da:	80 64       	ori	r24, 0x40	; 64
     1dc:	82 bb       	out	0x12, r24	; 18
     1de:	08 95       	ret

000001e0 <offHazardLight>:
     1e0:	82 b3       	in	r24, 0x12	; 18
     1e2:	8f 7b       	andi	r24, 0xBF	; 191
     1e4:	82 bb       	out	0x12, r24	; 18
     1e6:	08 95       	ret

000001e8 <playRadio>:
     1e8:	82 b3       	in	r24, 0x12	; 18
     1ea:	80 62       	ori	r24, 0x20	; 32
     1ec:	82 bb       	out	0x12, r24	; 18
     1ee:	08 95       	ret

000001f0 <ADC_Init>:
     1f0:	1a ba       	out	0x1a, r1	; 26
     1f2:	87 e8       	ldi	r24, 0x87	; 135
     1f4:	86 b9       	out	0x06, r24	; 6
     1f6:	80 e4       	ldi	r24, 0x40	; 64
     1f8:	87 b9       	out	0x07, r24	; 7
     1fa:	08 95       	ret

000001fc <ADC_Read>:
     1fc:	97 b1       	in	r25, 0x07	; 7
     1fe:	8f 70       	andi	r24, 0x0F	; 15
     200:	98 2b       	or	r25, r24
     202:	97 b9       	out	0x07, r25	; 7
     204:	86 b1       	in	r24, 0x06	; 6
     206:	80 64       	ori	r24, 0x40	; 64
     208:	86 b9       	out	0x06, r24	; 6
     20a:	34 9b       	sbis	0x06, 4	; 6
     20c:	fe cf       	rjmp	.-4      	; 0x20a <ADC_Read+0xe>
     20e:	8a e1       	ldi	r24, 0x1A	; 26
     210:	8a 95       	dec	r24
     212:	f1 f7       	brne	.-4      	; 0x210 <ADC_Read+0x14>
     214:	00 c0       	rjmp	.+0      	; 0x216 <ADC_Read+0x1a>
     216:	24 b1       	in	r18, 0x04	; 4
     218:	85 b1       	in	r24, 0x05	; 5
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	98 2f       	mov	r25, r24
     21e:	88 27       	eor	r24, r24
     220:	82 0f       	add	r24, r18
     222:	91 1d       	adc	r25, r1
     224:	08 95       	ret

00000226 <PWM_init>:
     226:	89 e6       	ldi	r24, 0x69	; 105
     228:	83 bf       	out	0x33, r24	; 51
     22a:	87 b3       	in	r24, 0x17	; 23
     22c:	88 60       	ori	r24, 0x08	; 8
     22e:	87 bb       	out	0x17, r24	; 23
     230:	08 95       	ret

00000232 <I2C_Init>:
     232:	11 b8       	out	0x01, r1	; 1
     234:	80 e2       	ldi	r24, 0x20	; 32
     236:	80 b9       	out	0x00, r24	; 0
     238:	08 95       	ret

0000023a <I2C_Repeated_Start>:
     23a:	94 ea       	ldi	r25, 0xA4	; 164
     23c:	96 bf       	out	0x36, r25	; 54
     23e:	06 b6       	in	r0, 0x36	; 54
     240:	07 fe       	sbrs	r0, 7
     242:	fd cf       	rjmp	.-6      	; 0x23e <I2C_Repeated_Start+0x4>
     244:	91 b1       	in	r25, 0x01	; 1
     246:	98 7f       	andi	r25, 0xF8	; 248
     248:	90 31       	cpi	r25, 0x10	; 16
     24a:	71 f4       	brne	.+28     	; 0x268 <I2C_Repeated_Start+0x2e>
     24c:	83 b9       	out	0x03, r24	; 3
     24e:	84 e8       	ldi	r24, 0x84	; 132
     250:	86 bf       	out	0x36, r24	; 54
     252:	06 b6       	in	r0, 0x36	; 54
     254:	07 fe       	sbrs	r0, 7
     256:	fd cf       	rjmp	.-6      	; 0x252 <I2C_Repeated_Start+0x18>
     258:	81 b1       	in	r24, 0x01	; 1
     25a:	88 7f       	andi	r24, 0xF8	; 248
     25c:	80 34       	cpi	r24, 0x40	; 64
     25e:	31 f0       	breq	.+12     	; 0x26c <I2C_Repeated_Start+0x32>
     260:	80 32       	cpi	r24, 0x20	; 32
     262:	31 f4       	brne	.+12     	; 0x270 <I2C_Repeated_Start+0x36>
     264:	82 e0       	ldi	r24, 0x02	; 2
     266:	08 95       	ret
     268:	80 e0       	ldi	r24, 0x00	; 0
     26a:	08 95       	ret
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	08 95       	ret
     270:	83 e0       	ldi	r24, 0x03	; 3
     272:	08 95       	ret

00000274 <I2C_Stop>:
     274:	84 e9       	ldi	r24, 0x94	; 148
     276:	86 bf       	out	0x36, r24	; 54
     278:	06 b6       	in	r0, 0x36	; 54
     27a:	04 fc       	sbrc	r0, 4
     27c:	fd cf       	rjmp	.-6      	; 0x278 <I2C_Stop+0x4>
     27e:	08 95       	ret

00000280 <I2C_Start_Wait>:
     280:	cf 93       	push	r28
     282:	c8 2f       	mov	r28, r24
     284:	84 ea       	ldi	r24, 0xA4	; 164
     286:	86 bf       	out	0x36, r24	; 54
     288:	06 b6       	in	r0, 0x36	; 54
     28a:	07 fe       	sbrs	r0, 7
     28c:	fd cf       	rjmp	.-6      	; 0x288 <I2C_Start_Wait+0x8>
     28e:	81 b1       	in	r24, 0x01	; 1
     290:	88 7f       	andi	r24, 0xF8	; 248
     292:	88 30       	cpi	r24, 0x08	; 8
     294:	b9 f7       	brne	.-18     	; 0x284 <I2C_Start_Wait+0x4>
     296:	c3 b9       	out	0x03, r28	; 3
     298:	84 e8       	ldi	r24, 0x84	; 132
     29a:	86 bf       	out	0x36, r24	; 54
     29c:	06 b6       	in	r0, 0x36	; 54
     29e:	07 fe       	sbrs	r0, 7
     2a0:	fd cf       	rjmp	.-6      	; 0x29c <I2C_Start_Wait+0x1c>
     2a2:	81 b1       	in	r24, 0x01	; 1
     2a4:	88 7f       	andi	r24, 0xF8	; 248
     2a6:	88 31       	cpi	r24, 0x18	; 24
     2a8:	19 f0       	breq	.+6      	; 0x2b0 <I2C_Start_Wait+0x30>
     2aa:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     2ae:	ea cf       	rjmp	.-44     	; 0x284 <I2C_Start_Wait+0x4>
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <I2C_Write>:
     2b4:	83 b9       	out	0x03, r24	; 3
     2b6:	84 e8       	ldi	r24, 0x84	; 132
     2b8:	86 bf       	out	0x36, r24	; 54
     2ba:	06 b6       	in	r0, 0x36	; 54
     2bc:	07 fe       	sbrs	r0, 7
     2be:	fd cf       	rjmp	.-6      	; 0x2ba <I2C_Write+0x6>
     2c0:	81 b1       	in	r24, 0x01	; 1
     2c2:	88 7f       	andi	r24, 0xF8	; 248
     2c4:	88 32       	cpi	r24, 0x28	; 40
     2c6:	21 f0       	breq	.+8      	; 0x2d0 <I2C_Write+0x1c>
     2c8:	80 33       	cpi	r24, 0x30	; 48
     2ca:	21 f4       	brne	.+8      	; 0x2d4 <I2C_Write+0x20>
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	08 95       	ret
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	08 95       	ret
     2d4:	82 e0       	ldi	r24, 0x02	; 2
     2d6:	08 95       	ret

000002d8 <I2C_Read_Ack>:
     2d8:	84 ec       	ldi	r24, 0xC4	; 196
     2da:	86 bf       	out	0x36, r24	; 54
     2dc:	06 b6       	in	r0, 0x36	; 54
     2de:	07 fe       	sbrs	r0, 7
     2e0:	fd cf       	rjmp	.-6      	; 0x2dc <I2C_Read_Ack+0x4>
     2e2:	83 b1       	in	r24, 0x03	; 3
     2e4:	08 95       	ret

000002e6 <I2C_Read_Nack>:
     2e6:	84 e8       	ldi	r24, 0x84	; 132
     2e8:	86 bf       	out	0x36, r24	; 54
     2ea:	06 b6       	in	r0, 0x36	; 54
     2ec:	07 fe       	sbrs	r0, 7
     2ee:	fd cf       	rjmp	.-6      	; 0x2ea <I2C_Read_Nack+0x4>
     2f0:	83 b1       	in	r24, 0x03	; 3
     2f2:	08 95       	ret

000002f4 <MPU6050_Init>:
     2f4:	2f e7       	ldi	r18, 0x7F	; 127
     2f6:	89 ea       	ldi	r24, 0xA9	; 169
     2f8:	93 e0       	ldi	r25, 0x03	; 3
     2fa:	21 50       	subi	r18, 0x01	; 1
     2fc:	80 40       	sbci	r24, 0x00	; 0
     2fe:	90 40       	sbci	r25, 0x00	; 0
     300:	e1 f7       	brne	.-8      	; 0x2fa <MPU6050_Init+0x6>
     302:	00 c0       	rjmp	.+0      	; 0x304 <MPU6050_Init+0x10>
     304:	00 00       	nop
     306:	80 ed       	ldi	r24, 0xD0	; 208
     308:	0e 94 40 01 	call	0x280	; 0x280 <I2C_Start_Wait>
     30c:	89 e1       	ldi	r24, 0x19	; 25
     30e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     312:	87 e0       	ldi	r24, 0x07	; 7
     314:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     318:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     31c:	80 ed       	ldi	r24, 0xD0	; 208
     31e:	0e 94 40 01 	call	0x280	; 0x280 <I2C_Start_Wait>
     322:	8b e6       	ldi	r24, 0x6B	; 107
     324:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     32e:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     332:	80 ed       	ldi	r24, 0xD0	; 208
     334:	0e 94 40 01 	call	0x280	; 0x280 <I2C_Start_Wait>
     338:	8a e1       	ldi	r24, 0x1A	; 26
     33a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     344:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     348:	80 ed       	ldi	r24, 0xD0	; 208
     34a:	0e 94 40 01 	call	0x280	; 0x280 <I2C_Start_Wait>
     34e:	8b e1       	ldi	r24, 0x1B	; 27
     350:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     354:	88 e1       	ldi	r24, 0x18	; 24
     356:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     35a:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     35e:	80 ed       	ldi	r24, 0xD0	; 208
     360:	0e 94 40 01 	call	0x280	; 0x280 <I2C_Start_Wait>
     364:	88 e3       	ldi	r24, 0x38	; 56
     366:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     370:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     374:	08 95       	ret

00000376 <MPU_Start_Loc>:
     376:	80 ed       	ldi	r24, 0xD0	; 208
     378:	0e 94 40 01 	call	0x280	; 0x280 <I2C_Start_Wait>
     37c:	8b e3       	ldi	r24, 0x3B	; 59
     37e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Write>
     382:	81 ed       	ldi	r24, 0xD1	; 209
     384:	0e 94 1d 01 	call	0x23a	; 0x23a <I2C_Repeated_Start>
     388:	08 95       	ret

0000038a <Read_RawValue>:
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	0e 94 bb 01 	call	0x376	; 0x376 <MPU_Start_Loc>
     392:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     396:	c8 2f       	mov	r28, r24
     398:	d0 e0       	ldi	r29, 0x00	; 0
     39a:	dc 2f       	mov	r29, r28
     39c:	cc 27       	eor	r28, r28
     39e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     3a2:	be 01       	movw	r22, r28
     3a4:	68 2b       	or	r22, r24
     3a6:	07 2e       	mov	r0, r23
     3a8:	00 0c       	add	r0, r0
     3aa:	88 0b       	sbc	r24, r24
     3ac:	99 0b       	sbc	r25, r25
     3ae:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     3b2:	60 93 74 02 	sts	0x0274, r22	; 0x800274 <Acc_x>
     3b6:	70 93 75 02 	sts	0x0275, r23	; 0x800275 <Acc_x+0x1>
     3ba:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Acc_x+0x2>
     3be:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Acc_x+0x3>
     3c2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     3c6:	c8 2f       	mov	r28, r24
     3c8:	d0 e0       	ldi	r29, 0x00	; 0
     3ca:	dc 2f       	mov	r29, r28
     3cc:	cc 27       	eor	r28, r28
     3ce:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     3d2:	be 01       	movw	r22, r28
     3d4:	68 2b       	or	r22, r24
     3d6:	07 2e       	mov	r0, r23
     3d8:	00 0c       	add	r0, r0
     3da:	88 0b       	sbc	r24, r24
     3dc:	99 0b       	sbc	r25, r25
     3de:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     3e2:	60 93 49 02 	sts	0x0249, r22	; 0x800249 <Acc_y>
     3e6:	70 93 4a 02 	sts	0x024A, r23	; 0x80024a <Acc_y+0x1>
     3ea:	80 93 4b 02 	sts	0x024B, r24	; 0x80024b <Acc_y+0x2>
     3ee:	90 93 4c 02 	sts	0x024C, r25	; 0x80024c <Acc_y+0x3>
     3f2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     3f6:	c8 2f       	mov	r28, r24
     3f8:	d0 e0       	ldi	r29, 0x00	; 0
     3fa:	dc 2f       	mov	r29, r28
     3fc:	cc 27       	eor	r28, r28
     3fe:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     402:	be 01       	movw	r22, r28
     404:	68 2b       	or	r22, r24
     406:	07 2e       	mov	r0, r23
     408:	00 0c       	add	r0, r0
     40a:	88 0b       	sbc	r24, r24
     40c:	99 0b       	sbc	r25, r25
     40e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     412:	60 93 a7 01 	sts	0x01A7, r22	; 0x8001a7 <Acc_z>
     416:	70 93 a8 01 	sts	0x01A8, r23	; 0x8001a8 <Acc_z+0x1>
     41a:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <Acc_z+0x2>
     41e:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <Acc_z+0x3>
     422:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     426:	c8 2f       	mov	r28, r24
     428:	d0 e0       	ldi	r29, 0x00	; 0
     42a:	dc 2f       	mov	r29, r28
     42c:	cc 27       	eor	r28, r28
     42e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     432:	be 01       	movw	r22, r28
     434:	68 2b       	or	r22, r24
     436:	07 2e       	mov	r0, r23
     438:	00 0c       	add	r0, r0
     43a:	88 0b       	sbc	r24, r24
     43c:	99 0b       	sbc	r25, r25
     43e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     442:	60 93 45 02 	sts	0x0245, r22	; 0x800245 <Temperature>
     446:	70 93 46 02 	sts	0x0246, r23	; 0x800246 <Temperature+0x1>
     44a:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <Temperature+0x2>
     44e:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <Temperature+0x3>
     452:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     456:	c8 2f       	mov	r28, r24
     458:	d0 e0       	ldi	r29, 0x00	; 0
     45a:	dc 2f       	mov	r29, r28
     45c:	cc 27       	eor	r28, r28
     45e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     462:	be 01       	movw	r22, r28
     464:	68 2b       	or	r22, r24
     466:	07 2e       	mov	r0, r23
     468:	00 0c       	add	r0, r0
     46a:	88 0b       	sbc	r24, r24
     46c:	99 0b       	sbc	r25, r25
     46e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     472:	60 93 41 02 	sts	0x0241, r22	; 0x800241 <Gyro_x>
     476:	70 93 42 02 	sts	0x0242, r23	; 0x800242 <Gyro_x+0x1>
     47a:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <Gyro_x+0x2>
     47e:	90 93 44 02 	sts	0x0244, r25	; 0x800244 <Gyro_x+0x3>
     482:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     486:	c8 2f       	mov	r28, r24
     488:	d0 e0       	ldi	r29, 0x00	; 0
     48a:	dc 2f       	mov	r29, r28
     48c:	cc 27       	eor	r28, r28
     48e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     492:	be 01       	movw	r22, r28
     494:	68 2b       	or	r22, r24
     496:	07 2e       	mov	r0, r23
     498:	00 0c       	add	r0, r0
     49a:	88 0b       	sbc	r24, r24
     49c:	99 0b       	sbc	r25, r25
     49e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     4a2:	60 93 8e 02 	sts	0x028E, r22	; 0x80028e <Gyro_y>
     4a6:	70 93 8f 02 	sts	0x028F, r23	; 0x80028f <Gyro_y+0x1>
     4aa:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <Gyro_y+0x2>
     4ae:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <Gyro_y+0x3>
     4b2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <I2C_Read_Ack>
     4b6:	c8 2f       	mov	r28, r24
     4b8:	d0 e0       	ldi	r29, 0x00	; 0
     4ba:	dc 2f       	mov	r29, r28
     4bc:	cc 27       	eor	r28, r28
     4be:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_Read_Nack>
     4c2:	be 01       	movw	r22, r28
     4c4:	68 2b       	or	r22, r24
     4c6:	07 2e       	mov	r0, r23
     4c8:	00 0c       	add	r0, r0
     4ca:	88 0b       	sbc	r24, r24
     4cc:	99 0b       	sbc	r25, r25
     4ce:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     4d2:	60 93 70 02 	sts	0x0270, r22	; 0x800270 <Gyro_z>
     4d6:	70 93 71 02 	sts	0x0271, r23	; 0x800271 <Gyro_z+0x1>
     4da:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <Gyro_z+0x2>
     4de:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <Gyro_z+0x3>
     4e2:	0e 94 3a 01 	call	0x274	; 0x274 <I2C_Stop>
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	08 95       	ret

000004ec <isDriverSleepingGyro>:
     4ec:	4f 92       	push	r4
     4ee:	5f 92       	push	r5
     4f0:	6f 92       	push	r6
     4f2:	7f 92       	push	r7
     4f4:	8f 92       	push	r8
     4f6:	9f 92       	push	r9
     4f8:	af 92       	push	r10
     4fa:	bf 92       	push	r11
     4fc:	cf 92       	push	r12
     4fe:	df 92       	push	r13
     500:	ef 92       	push	r14
     502:	ff 92       	push	r15
     504:	0f 93       	push	r16
     506:	1f 93       	push	r17
     508:	4b 01       	movw	r8, r22
     50a:	5c 01       	movw	r10, r24
     50c:	29 01       	movw	r4, r18
     50e:	3a 01       	movw	r6, r20
     510:	67 01       	movw	r12, r14
     512:	78 01       	movw	r14, r16
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	40 e0       	ldi	r20, 0x00	; 0
     51a:	50 ec       	ldi	r21, 0xC0	; 192
     51c:	c7 01       	movw	r24, r14
     51e:	b6 01       	movw	r22, r12
     520:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__gesf2>
     524:	18 16       	cp	r1, r24
     526:	ac f5       	brge	.+106    	; 0x592 <isDriverSleepingGyro+0xa6>
     528:	20 e0       	ldi	r18, 0x00	; 0
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	40 e0       	ldi	r20, 0x00	; 0
     52e:	50 e4       	ldi	r21, 0x40	; 64
     530:	c7 01       	movw	r24, r14
     532:	b6 01       	movw	r22, r12
     534:	0e 94 9d 08 	call	0x113a	; 0x113a <__cmpsf2>
     538:	88 23       	and	r24, r24
     53a:	74 f5       	brge	.+92     	; 0x598 <isDriverSleepingGyro+0xac>
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	40 e4       	ldi	r20, 0x40	; 64
     542:	50 ec       	ldi	r21, 0xC0	; 192
     544:	c5 01       	movw	r24, r10
     546:	b4 01       	movw	r22, r8
     548:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__gesf2>
     54c:	18 16       	cp	r1, r24
     54e:	3c f5       	brge	.+78     	; 0x59e <isDriverSleepingGyro+0xb2>
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	30 e0       	ldi	r19, 0x00	; 0
     554:	40 e4       	ldi	r20, 0x40	; 64
     556:	50 e4       	ldi	r21, 0x40	; 64
     558:	c5 01       	movw	r24, r10
     55a:	b4 01       	movw	r22, r8
     55c:	0e 94 9d 08 	call	0x113a	; 0x113a <__cmpsf2>
     560:	88 23       	and	r24, r24
     562:	04 f5       	brge	.+64     	; 0x5a4 <isDriverSleepingGyro+0xb8>
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	40 e0       	ldi	r20, 0x00	; 0
     56a:	51 e4       	ldi	r21, 0x41	; 65
     56c:	c3 01       	movw	r24, r6
     56e:	b2 01       	movw	r22, r4
     570:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__gesf2>
     574:	88 23       	and	r24, r24
     576:	cc f0       	brlt	.+50     	; 0x5aa <isDriverSleepingGyro+0xbe>
     578:	20 e0       	ldi	r18, 0x00	; 0
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	40 e1       	ldi	r20, 0x10	; 16
     57e:	51 e4       	ldi	r21, 0x41	; 65
     580:	c3 01       	movw	r24, r6
     582:	b2 01       	movw	r22, r4
     584:	0e 94 9d 08 	call	0x113a	; 0x113a <__cmpsf2>
     588:	18 16       	cp	r1, r24
     58a:	94 f4       	brge	.+36     	; 0x5b0 <isDriverSleepingGyro+0xc4>
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	11 c0       	rjmp	.+34     	; 0x5b4 <isDriverSleepingGyro+0xc8>
     592:	81 e0       	ldi	r24, 0x01	; 1
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	0e c0       	rjmp	.+28     	; 0x5b4 <isDriverSleepingGyro+0xc8>
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0b c0       	rjmp	.+22     	; 0x5b4 <isDriverSleepingGyro+0xc8>
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	08 c0       	rjmp	.+16     	; 0x5b4 <isDriverSleepingGyro+0xc8>
     5a4:	81 e0       	ldi	r24, 0x01	; 1
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	05 c0       	rjmp	.+10     	; 0x5b4 <isDriverSleepingGyro+0xc8>
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <isDriverSleepingGyro+0xc8>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	1f 91       	pop	r17
     5b6:	0f 91       	pop	r16
     5b8:	ff 90       	pop	r15
     5ba:	ef 90       	pop	r14
     5bc:	df 90       	pop	r13
     5be:	cf 90       	pop	r12
     5c0:	bf 90       	pop	r11
     5c2:	af 90       	pop	r10
     5c4:	9f 90       	pop	r9
     5c6:	8f 90       	pop	r8
     5c8:	7f 90       	pop	r7
     5ca:	6f 90       	pop	r6
     5cc:	5f 90       	pop	r5
     5ce:	4f 90       	pop	r4
     5d0:	08 95       	ret

000005d2 <LCD_Command>:
     5d2:	98 b3       	in	r25, 0x18	; 24
     5d4:	9f 70       	andi	r25, 0x0F	; 15
     5d6:	28 2f       	mov	r18, r24
     5d8:	20 7f       	andi	r18, 0xF0	; 240
     5da:	92 2b       	or	r25, r18
     5dc:	98 bb       	out	0x18, r25	; 24
     5de:	98 b3       	in	r25, 0x18	; 24
     5e0:	9e 7f       	andi	r25, 0xFE	; 254
     5e2:	98 bb       	out	0x18, r25	; 24
     5e4:	98 b3       	in	r25, 0x18	; 24
     5e6:	92 60       	ori	r25, 0x02	; 2
     5e8:	98 bb       	out	0x18, r25	; 24
     5ea:	32 e0       	ldi	r19, 0x02	; 2
     5ec:	3a 95       	dec	r19
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <LCD_Command+0x1a>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <LCD_Command+0x20>
     5f2:	98 b3       	in	r25, 0x18	; 24
     5f4:	9d 7f       	andi	r25, 0xFD	; 253
     5f6:	98 bb       	out	0x18, r25	; 24
     5f8:	ef e8       	ldi	r30, 0x8F	; 143
     5fa:	f1 e0       	ldi	r31, 0x01	; 1
     5fc:	31 97       	sbiw	r30, 0x01	; 1
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <LCD_Command+0x2a>
     600:	00 c0       	rjmp	.+0      	; 0x602 <LCD_Command+0x30>
     602:	00 00       	nop
     604:	28 b3       	in	r18, 0x18	; 24
     606:	f0 e1       	ldi	r31, 0x10	; 16
     608:	8f 9f       	mul	r24, r31
     60a:	c0 01       	movw	r24, r0
     60c:	11 24       	eor	r1, r1
     60e:	92 2f       	mov	r25, r18
     610:	9f 70       	andi	r25, 0x0F	; 15
     612:	89 2b       	or	r24, r25
     614:	88 bb       	out	0x18, r24	; 24
     616:	88 b3       	in	r24, 0x18	; 24
     618:	82 60       	ori	r24, 0x02	; 2
     61a:	88 bb       	out	0x18, r24	; 24
     61c:	32 e0       	ldi	r19, 0x02	; 2
     61e:	3a 95       	dec	r19
     620:	f1 f7       	brne	.-4      	; 0x61e <LCD_Command+0x4c>
     622:	00 c0       	rjmp	.+0      	; 0x624 <LCD_Command+0x52>
     624:	88 b3       	in	r24, 0x18	; 24
     626:	8d 7f       	andi	r24, 0xFD	; 253
     628:	88 bb       	out	0x18, r24	; 24
     62a:	8f e9       	ldi	r24, 0x9F	; 159
     62c:	9f e0       	ldi	r25, 0x0F	; 15
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	f1 f7       	brne	.-4      	; 0x62e <LCD_Command+0x5c>
     632:	00 c0       	rjmp	.+0      	; 0x634 <LCD_Command+0x62>
     634:	00 00       	nop
     636:	08 95       	ret

00000638 <LCD_Char>:
     638:	98 b3       	in	r25, 0x18	; 24
     63a:	9f 70       	andi	r25, 0x0F	; 15
     63c:	28 2f       	mov	r18, r24
     63e:	20 7f       	andi	r18, 0xF0	; 240
     640:	92 2b       	or	r25, r18
     642:	98 bb       	out	0x18, r25	; 24
     644:	98 b3       	in	r25, 0x18	; 24
     646:	91 60       	ori	r25, 0x01	; 1
     648:	98 bb       	out	0x18, r25	; 24
     64a:	98 b3       	in	r25, 0x18	; 24
     64c:	92 60       	ori	r25, 0x02	; 2
     64e:	98 bb       	out	0x18, r25	; 24
     650:	32 e0       	ldi	r19, 0x02	; 2
     652:	3a 95       	dec	r19
     654:	f1 f7       	brne	.-4      	; 0x652 <LCD_Char+0x1a>
     656:	00 c0       	rjmp	.+0      	; 0x658 <LCD_Char+0x20>
     658:	98 b3       	in	r25, 0x18	; 24
     65a:	9d 7f       	andi	r25, 0xFD	; 253
     65c:	98 bb       	out	0x18, r25	; 24
     65e:	ef e8       	ldi	r30, 0x8F	; 143
     660:	f1 e0       	ldi	r31, 0x01	; 1
     662:	31 97       	sbiw	r30, 0x01	; 1
     664:	f1 f7       	brne	.-4      	; 0x662 <LCD_Char+0x2a>
     666:	00 c0       	rjmp	.+0      	; 0x668 <LCD_Char+0x30>
     668:	00 00       	nop
     66a:	28 b3       	in	r18, 0x18	; 24
     66c:	f0 e1       	ldi	r31, 0x10	; 16
     66e:	8f 9f       	mul	r24, r31
     670:	c0 01       	movw	r24, r0
     672:	11 24       	eor	r1, r1
     674:	92 2f       	mov	r25, r18
     676:	9f 70       	andi	r25, 0x0F	; 15
     678:	89 2b       	or	r24, r25
     67a:	88 bb       	out	0x18, r24	; 24
     67c:	88 b3       	in	r24, 0x18	; 24
     67e:	82 60       	ori	r24, 0x02	; 2
     680:	88 bb       	out	0x18, r24	; 24
     682:	32 e0       	ldi	r19, 0x02	; 2
     684:	3a 95       	dec	r19
     686:	f1 f7       	brne	.-4      	; 0x684 <LCD_Char+0x4c>
     688:	00 c0       	rjmp	.+0      	; 0x68a <LCD_Char+0x52>
     68a:	88 b3       	in	r24, 0x18	; 24
     68c:	8d 7f       	andi	r24, 0xFD	; 253
     68e:	88 bb       	out	0x18, r24	; 24
     690:	8f e9       	ldi	r24, 0x9F	; 159
     692:	9f e0       	ldi	r25, 0x0F	; 15
     694:	01 97       	sbiw	r24, 0x01	; 1
     696:	f1 f7       	brne	.-4      	; 0x694 <LCD_Char+0x5c>
     698:	00 c0       	rjmp	.+0      	; 0x69a <LCD_Char+0x62>
     69a:	00 00       	nop
     69c:	08 95       	ret

0000069e <LCD_Init>:
     69e:	8f ef       	ldi	r24, 0xFF	; 255
     6a0:	87 bb       	out	0x17, r24	; 23
     6a2:	8f e3       	ldi	r24, 0x3F	; 63
     6a4:	9c e9       	ldi	r25, 0x9C	; 156
     6a6:	01 97       	sbiw	r24, 0x01	; 1
     6a8:	f1 f7       	brne	.-4      	; 0x6a6 <LCD_Init+0x8>
     6aa:	00 c0       	rjmp	.+0      	; 0x6ac <LCD_Init+0xe>
     6ac:	00 00       	nop
     6ae:	83 e3       	ldi	r24, 0x33	; 51
     6b0:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6b4:	82 e3       	ldi	r24, 0x32	; 50
     6b6:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6ba:	88 e2       	ldi	r24, 0x28	; 40
     6bc:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6c0:	8c e0       	ldi	r24, 0x0C	; 12
     6c2:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6c6:	86 e0       	ldi	r24, 0x06	; 6
     6c8:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6d2:	8f e9       	ldi	r24, 0x9F	; 159
     6d4:	9f e0       	ldi	r25, 0x0F	; 15
     6d6:	01 97       	sbiw	r24, 0x01	; 1
     6d8:	f1 f7       	brne	.-4      	; 0x6d6 <LCD_Init+0x38>
     6da:	00 c0       	rjmp	.+0      	; 0x6dc <LCD_Init+0x3e>
     6dc:	00 00       	nop
     6de:	80 e8       	ldi	r24, 0x80	; 128
     6e0:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     6e4:	08 95       	ret

000006e6 <LCD_String>:
     6e6:	0f 93       	push	r16
     6e8:	1f 93       	push	r17
     6ea:	cf 93       	push	r28
     6ec:	df 93       	push	r29
     6ee:	8c 01       	movw	r16, r24
     6f0:	c0 e0       	ldi	r28, 0x00	; 0
     6f2:	d0 e0       	ldi	r29, 0x00	; 0
     6f4:	03 c0       	rjmp	.+6      	; 0x6fc <LCD_String+0x16>
     6f6:	0e 94 1c 03 	call	0x638	; 0x638 <LCD_Char>
     6fa:	21 96       	adiw	r28, 0x01	; 1
     6fc:	f8 01       	movw	r30, r16
     6fe:	ec 0f       	add	r30, r28
     700:	fd 1f       	adc	r31, r29
     702:	80 81       	ld	r24, Z
     704:	81 11       	cpse	r24, r1
     706:	f7 cf       	rjmp	.-18     	; 0x6f6 <LCD_String+0x10>
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	1f 91       	pop	r17
     70e:	0f 91       	pop	r16
     710:	08 95       	ret

00000712 <LCD_String_xy>:
     712:	cf 93       	push	r28
     714:	df 93       	push	r29
     716:	ea 01       	movw	r28, r20
     718:	81 11       	cpse	r24, r1
     71a:	08 c0       	rjmp	.+16     	; 0x72c <LCD_String_xy+0x1a>
     71c:	60 31       	cpi	r22, 0x10	; 16
     71e:	30 f4       	brcc	.+12     	; 0x72c <LCD_String_xy+0x1a>
     720:	86 2f       	mov	r24, r22
     722:	8f 70       	andi	r24, 0x0F	; 15
     724:	80 68       	ori	r24, 0x80	; 128
     726:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     72a:	09 c0       	rjmp	.+18     	; 0x73e <LCD_String_xy+0x2c>
     72c:	81 30       	cpi	r24, 0x01	; 1
     72e:	39 f4       	brne	.+14     	; 0x73e <LCD_String_xy+0x2c>
     730:	60 31       	cpi	r22, 0x10	; 16
     732:	28 f4       	brcc	.+10     	; 0x73e <LCD_String_xy+0x2c>
     734:	86 2f       	mov	r24, r22
     736:	8f 70       	andi	r24, 0x0F	; 15
     738:	80 6c       	ori	r24, 0xC0	; 192
     73a:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     73e:	ce 01       	movw	r24, r28
     740:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <LCD_Clear>:
     74a:	81 e0       	ldi	r24, 0x01	; 1
     74c:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     750:	8f e9       	ldi	r24, 0x9F	; 159
     752:	9f e0       	ldi	r25, 0x0F	; 15
     754:	01 97       	sbiw	r24, 0x01	; 1
     756:	f1 f7       	brne	.-4      	; 0x754 <LCD_Clear+0xa>
     758:	00 c0       	rjmp	.+0      	; 0x75a <LCD_Clear+0x10>
     75a:	00 00       	nop
     75c:	80 e8       	ldi	r24, 0x80	; 128
     75e:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     762:	08 95       	ret

00000764 <isDriverSleepingIR>:
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
     76c:	8a e6       	ldi	r24, 0x6A	; 106
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	c0 e0       	ldi	r28, 0x00	; 0
     77a:	d0 e0       	ldi	r29, 0x00	; 0
     77c:	0f c0       	rjmp	.+30     	; 0x79c <isDriverSleepingIR+0x38>
     77e:	9e 9b       	sbis	0x13, 6	; 19
     780:	02 c0       	rjmp	.+4      	; 0x786 <isDriverSleepingIR+0x22>
     782:	21 96       	adiw	r28, 0x01	; 1
     784:	01 c0       	rjmp	.+2      	; 0x788 <isDriverSleepingIR+0x24>
     786:	21 97       	sbiw	r28, 0x01	; 1
     788:	2f e7       	ldi	r18, 0x7F	; 127
     78a:	38 e3       	ldi	r19, 0x38	; 56
     78c:	41 e0       	ldi	r20, 0x01	; 1
     78e:	21 50       	subi	r18, 0x01	; 1
     790:	30 40       	sbci	r19, 0x00	; 0
     792:	40 40       	sbci	r20, 0x00	; 0
     794:	e1 f7       	brne	.-8      	; 0x78e <isDriverSleepingIR+0x2a>
     796:	00 c0       	rjmp	.+0      	; 0x798 <isDriverSleepingIR+0x34>
     798:	00 00       	nop
     79a:	01 96       	adiw	r24, 0x01	; 1
     79c:	89 32       	cpi	r24, 0x29	; 41
     79e:	91 05       	cpc	r25, r1
     7a0:	74 f3       	brlt	.-36     	; 0x77e <isDriverSleepingIR+0x1a>
     7a2:	80 ec       	ldi	r24, 0xC0	; 192
     7a4:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     7a8:	88 e7       	ldi	r24, 0x78	; 120
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
     7b0:	a8 97       	sbiw	r28, 0x28	; 40
     7b2:	19 f4       	brne	.+6      	; 0x7ba <isDriverSleepingIR+0x56>
     7b4:	81 e0       	ldi	r24, 0x01	; 1
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	02 c0       	rjmp	.+4      	; 0x7be <isDriverSleepingIR+0x5a>
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	08 95       	ret

000007c4 <USART_Init>:
     7c4:	2a b1       	in	r18, 0x0a	; 10
     7c6:	28 69       	ori	r18, 0x98	; 152
     7c8:	2a b9       	out	0x0a, r18	; 10
     7ca:	20 b5       	in	r18, 0x20	; 32
     7cc:	26 68       	ori	r18, 0x86	; 134
     7ce:	20 bd       	out	0x20, r18	; 32
     7d0:	dc 01       	movw	r26, r24
     7d2:	cb 01       	movw	r24, r22
     7d4:	88 0f       	add	r24, r24
     7d6:	99 1f       	adc	r25, r25
     7d8:	aa 1f       	adc	r26, r26
     7da:	bb 1f       	adc	r27, r27
     7dc:	88 0f       	add	r24, r24
     7de:	99 1f       	adc	r25, r25
     7e0:	aa 1f       	adc	r26, r26
     7e2:	bb 1f       	adc	r27, r27
     7e4:	9c 01       	movw	r18, r24
     7e6:	ad 01       	movw	r20, r26
     7e8:	22 0f       	add	r18, r18
     7ea:	33 1f       	adc	r19, r19
     7ec:	44 1f       	adc	r20, r20
     7ee:	55 1f       	adc	r21, r21
     7f0:	22 0f       	add	r18, r18
     7f2:	33 1f       	adc	r19, r19
     7f4:	44 1f       	adc	r20, r20
     7f6:	55 1f       	adc	r21, r21
     7f8:	60 e0       	ldi	r22, 0x00	; 0
     7fa:	72 e1       	ldi	r23, 0x12	; 18
     7fc:	8a e7       	ldi	r24, 0x7A	; 122
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__udivmodsi4>
     804:	8f ef       	ldi	r24, 0xFF	; 255
     806:	82 0f       	add	r24, r18
     808:	89 b9       	out	0x09, r24	; 9
     80a:	da 01       	movw	r26, r20
     80c:	c9 01       	movw	r24, r18
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	a1 09       	sbc	r26, r1
     812:	b1 09       	sbc	r27, r1
     814:	89 2f       	mov	r24, r25
     816:	9a 2f       	mov	r25, r26
     818:	ab 2f       	mov	r26, r27
     81a:	bb 27       	eor	r27, r27
     81c:	80 bd       	out	0x20, r24	; 32
     81e:	08 95       	ret

00000820 <USART_TxChar>:
     820:	5d 9b       	sbis	0x0b, 5	; 11
     822:	fe cf       	rjmp	.-4      	; 0x820 <USART_TxChar>
     824:	8c b9       	out	0x0c, r24	; 12
     826:	08 95       	ret

00000828 <sendMessage>:
     828:	cf 92       	push	r12
     82a:	df 92       	push	r13
     82c:	ef 92       	push	r14
     82e:	ff 92       	push	r15
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	cd b7       	in	r28, 0x3d	; 61
     83a:	de b7       	in	r29, 0x3e	; 62
     83c:	a3 97       	sbiw	r28, 0x23	; 35
     83e:	0f b6       	in	r0, 0x3f	; 63
     840:	f8 94       	cli
     842:	de bf       	out	0x3e, r29	; 62
     844:	0f be       	out	0x3f, r0	; 63
     846:	cd bf       	out	0x3d, r28	; 61
     848:	7c 01       	movw	r14, r24
     84a:	6a 01       	movw	r12, r20
     84c:	89 01       	movw	r16, r18
     84e:	81 e4       	ldi	r24, 0x41	; 65
     850:	94 e5       	ldi	r25, 0x54	; 84
     852:	9a 83       	std	Y+2, r25	; 0x02
     854:	89 83       	std	Y+1, r24	; 0x01
     856:	1c 82       	std	Y+4, r1	; 0x04
     858:	1b 82       	std	Y+3, r1	; 0x03
     85a:	8a e0       	ldi	r24, 0x0A	; 10
     85c:	e1 ee       	ldi	r30, 0xE1	; 225
     85e:	f0 e0       	ldi	r31, 0x00	; 0
     860:	de 01       	movw	r26, r28
     862:	15 96       	adiw	r26, 0x05	; 5
     864:	01 90       	ld	r0, Z+
     866:	0d 92       	st	X+, r0
     868:	8a 95       	dec	r24
     86a:	e1 f7       	brne	.-8      	; 0x864 <__stack+0x5>
     86c:	89 e0       	ldi	r24, 0x09	; 9
     86e:	e0 e6       	ldi	r30, 0x60	; 96
     870:	f0 e0       	ldi	r31, 0x00	; 0
     872:	de 01       	movw	r26, r28
     874:	1f 96       	adiw	r26, 0x0f	; 15
     876:	01 90       	ld	r0, Z+
     878:	0d 92       	st	X+, r0
     87a:	8a 95       	dec	r24
     87c:	e1 f7       	brne	.-8      	; 0x876 <__stack+0x17>
     87e:	18 8e       	std	Y+24, r1	; 0x18
     880:	d7 01       	movw	r26, r14
     882:	0d 90       	ld	r0, X+
     884:	00 20       	and	r0, r0
     886:	e9 f7       	brne	.-6      	; 0x882 <__stack+0x23>
     888:	11 97       	sbiw	r26, 0x01	; 1
     88a:	8c e1       	ldi	r24, 0x1C	; 28
     88c:	e4 e8       	ldi	r30, 0x84	; 132
     88e:	f0 e0       	ldi	r31, 0x00	; 0
     890:	01 90       	ld	r0, Z+
     892:	0d 92       	st	X+, r0
     894:	8a 95       	dec	r24
     896:	e1 f7       	brne	.-8      	; 0x890 <__stack+0x31>
     898:	c7 01       	movw	r24, r14
     89a:	0e 94 b4 0a 	call	0x1568	; 0x1568 <strcat>
     89e:	d7 01       	movw	r26, r14
     8a0:	0d 90       	ld	r0, X+
     8a2:	00 20       	and	r0, r0
     8a4:	e9 f7       	brne	.-6      	; 0x8a0 <__stack+0x41>
     8a6:	11 97       	sbiw	r26, 0x01	; 1
     8a8:	81 e1       	ldi	r24, 0x11	; 17
     8aa:	e0 ea       	ldi	r30, 0xA0	; 160
     8ac:	f0 e0       	ldi	r31, 0x00	; 0
     8ae:	01 90       	ld	r0, Z+
     8b0:	0d 92       	st	X+, r0
     8b2:	8a 95       	dec	r24
     8b4:	e1 f7       	brne	.-8      	; 0x8ae <__stack+0x4f>
     8b6:	b6 01       	movw	r22, r12
     8b8:	c7 01       	movw	r24, r14
     8ba:	0e 94 b4 0a 	call	0x1568	; 0x1568 <strcat>
     8be:	d7 01       	movw	r26, r14
     8c0:	0d 90       	ld	r0, X+
     8c2:	00 20       	and	r0, r0
     8c4:	e9 f7       	brne	.-6      	; 0x8c0 <__stack+0x61>
     8c6:	11 97       	sbiw	r26, 0x01	; 1
     8c8:	80 e1       	ldi	r24, 0x10	; 16
     8ca:	e1 eb       	ldi	r30, 0xB1	; 177
     8cc:	f0 e0       	ldi	r31, 0x00	; 0
     8ce:	01 90       	ld	r0, Z+
     8d0:	0d 92       	st	X+, r0
     8d2:	8a 95       	dec	r24
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <__stack+0x6f>
     8d6:	b8 01       	movw	r22, r16
     8d8:	c7 01       	movw	r24, r14
     8da:	0e 94 b4 0a 	call	0x1568	; 0x1568 <strcat>
     8de:	8b e0       	ldi	r24, 0x0B	; 11
     8e0:	eb ee       	ldi	r30, 0xEB	; 235
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	de 01       	movw	r26, r28
     8e6:	59 96       	adiw	r26, 0x19	; 25
     8e8:	01 90       	ld	r0, Z+
     8ea:	0d 92       	st	X+, r0
     8ec:	8a 95       	dec	r24
     8ee:	e1 f7       	brne	.-8      	; 0x8e8 <__stack+0x89>
     8f0:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
     8f4:	41 ec       	ldi	r20, 0xC1	; 193
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	0e 94 89 03 	call	0x712	; 0x712 <LCD_String_xy>
     900:	80 ec       	ldi	r24, 0xC0	; 192
     902:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
     906:	49 ec       	ldi	r20, 0xC9	; 201
     908:	50 e0       	ldi	r21, 0x00	; 0
     90a:	63 e0       	ldi	r22, 0x03	; 3
     90c:	82 e0       	ldi	r24, 0x02	; 2
     90e:	0e 94 89 03 	call	0x712	; 0x712 <LCD_String_xy>
     912:	2f ef       	ldi	r18, 0xFF	; 255
     914:	84 e3       	ldi	r24, 0x34	; 52
     916:	9c e0       	ldi	r25, 0x0C	; 12
     918:	21 50       	subi	r18, 0x01	; 1
     91a:	80 40       	sbci	r24, 0x00	; 0
     91c:	90 40       	sbci	r25, 0x00	; 0
     91e:	e1 f7       	brne	.-8      	; 0x918 <__stack+0xb9>
     920:	00 c0       	rjmp	.+0      	; 0x922 <__stack+0xc3>
     922:	00 00       	nop
     924:	00 e0       	ldi	r16, 0x00	; 0
     926:	10 e0       	ldi	r17, 0x00	; 0
     928:	0a c0       	rjmp	.+20     	; 0x93e <__stack+0xdf>
     92a:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     92e:	8f e0       	ldi	r24, 0x0F	; 15
     930:	97 e2       	ldi	r25, 0x27	; 39
     932:	01 97       	sbiw	r24, 0x01	; 1
     934:	f1 f7       	brne	.-4      	; 0x932 <__stack+0xd3>
     936:	00 c0       	rjmp	.+0      	; 0x938 <__stack+0xd9>
     938:	00 00       	nop
     93a:	0f 5f       	subi	r16, 0xFF	; 255
     93c:	1f 4f       	sbci	r17, 0xFF	; 255
     93e:	e1 e0       	ldi	r30, 0x01	; 1
     940:	f0 e0       	ldi	r31, 0x00	; 0
     942:	ec 0f       	add	r30, r28
     944:	fd 1f       	adc	r31, r29
     946:	e0 0f       	add	r30, r16
     948:	f1 1f       	adc	r31, r17
     94a:	80 81       	ld	r24, Z
     94c:	81 11       	cpse	r24, r1
     94e:	ed cf       	rjmp	.-38     	; 0x92a <__stack+0xcb>
     950:	8d e0       	ldi	r24, 0x0D	; 13
     952:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     956:	8f e0       	ldi	r24, 0x0F	; 15
     958:	97 e2       	ldi	r25, 0x27	; 39
     95a:	01 97       	sbiw	r24, 0x01	; 1
     95c:	f1 f7       	brne	.-4      	; 0x95a <__stack+0xfb>
     95e:	00 c0       	rjmp	.+0      	; 0x960 <__stack+0x101>
     960:	00 00       	nop
     962:	00 e0       	ldi	r16, 0x00	; 0
     964:	10 e0       	ldi	r17, 0x00	; 0
     966:	0a c0       	rjmp	.+20     	; 0x97c <__stack+0x11d>
     968:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     96c:	8f e0       	ldi	r24, 0x0F	; 15
     96e:	97 e2       	ldi	r25, 0x27	; 39
     970:	01 97       	sbiw	r24, 0x01	; 1
     972:	f1 f7       	brne	.-4      	; 0x970 <__stack+0x111>
     974:	00 c0       	rjmp	.+0      	; 0x976 <__stack+0x117>
     976:	00 00       	nop
     978:	0f 5f       	subi	r16, 0xFF	; 255
     97a:	1f 4f       	sbci	r17, 0xFF	; 255
     97c:	e5 e0       	ldi	r30, 0x05	; 5
     97e:	f0 e0       	ldi	r31, 0x00	; 0
     980:	ec 0f       	add	r30, r28
     982:	fd 1f       	adc	r31, r29
     984:	e0 0f       	add	r30, r16
     986:	f1 1f       	adc	r31, r17
     988:	80 81       	ld	r24, Z
     98a:	81 11       	cpse	r24, r1
     98c:	ed cf       	rjmp	.-38     	; 0x968 <__stack+0x109>
     98e:	8d e0       	ldi	r24, 0x0D	; 13
     990:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     994:	8f e0       	ldi	r24, 0x0F	; 15
     996:	97 e2       	ldi	r25, 0x27	; 39
     998:	01 97       	sbiw	r24, 0x01	; 1
     99a:	f1 f7       	brne	.-4      	; 0x998 <__stack+0x139>
     99c:	00 c0       	rjmp	.+0      	; 0x99e <__stack+0x13f>
     99e:	00 00       	nop
     9a0:	00 e0       	ldi	r16, 0x00	; 0
     9a2:	10 e0       	ldi	r17, 0x00	; 0
     9a4:	0a c0       	rjmp	.+20     	; 0x9ba <__stack+0x15b>
     9a6:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     9aa:	8f e0       	ldi	r24, 0x0F	; 15
     9ac:	97 e2       	ldi	r25, 0x27	; 39
     9ae:	01 97       	sbiw	r24, 0x01	; 1
     9b0:	f1 f7       	brne	.-4      	; 0x9ae <__stack+0x14f>
     9b2:	00 c0       	rjmp	.+0      	; 0x9b4 <__stack+0x155>
     9b4:	00 00       	nop
     9b6:	0f 5f       	subi	r16, 0xFF	; 255
     9b8:	1f 4f       	sbci	r17, 0xFF	; 255
     9ba:	ef e0       	ldi	r30, 0x0F	; 15
     9bc:	f0 e0       	ldi	r31, 0x00	; 0
     9be:	ec 0f       	add	r30, r28
     9c0:	fd 1f       	adc	r31, r29
     9c2:	e0 0f       	add	r30, r16
     9c4:	f1 1f       	adc	r31, r17
     9c6:	80 81       	ld	r24, Z
     9c8:	81 11       	cpse	r24, r1
     9ca:	ed cf       	rjmp	.-38     	; 0x9a6 <__stack+0x147>
     9cc:	82 e2       	ldi	r24, 0x22	; 34
     9ce:	8c b9       	out	0x0c, r24	; 12
     9d0:	9f ef       	ldi	r25, 0xFF	; 255
     9d2:	20 e7       	ldi	r18, 0x70	; 112
     9d4:	82 e0       	ldi	r24, 0x02	; 2
     9d6:	91 50       	subi	r25, 0x01	; 1
     9d8:	20 40       	sbci	r18, 0x00	; 0
     9da:	80 40       	sbci	r24, 0x00	; 0
     9dc:	e1 f7       	brne	.-8      	; 0x9d6 <__stack+0x177>
     9de:	00 c0       	rjmp	.+0      	; 0x9e0 <__stack+0x181>
     9e0:	00 00       	nop
     9e2:	00 e0       	ldi	r16, 0x00	; 0
     9e4:	10 e0       	ldi	r17, 0x00	; 0
     9e6:	0a c0       	rjmp	.+20     	; 0x9fc <__stack+0x19d>
     9e8:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     9ec:	8f e0       	ldi	r24, 0x0F	; 15
     9ee:	97 e2       	ldi	r25, 0x27	; 39
     9f0:	01 97       	sbiw	r24, 0x01	; 1
     9f2:	f1 f7       	brne	.-4      	; 0x9f0 <__stack+0x191>
     9f4:	00 c0       	rjmp	.+0      	; 0x9f6 <__stack+0x197>
     9f6:	00 00       	nop
     9f8:	0f 5f       	subi	r16, 0xFF	; 255
     9fa:	1f 4f       	sbci	r17, 0xFF	; 255
     9fc:	e9 e1       	ldi	r30, 0x19	; 25
     9fe:	f0 e0       	ldi	r31, 0x00	; 0
     a00:	ec 0f       	add	r30, r28
     a02:	fd 1f       	adc	r31, r29
     a04:	e0 0f       	add	r30, r16
     a06:	f1 1f       	adc	r31, r17
     a08:	80 81       	ld	r24, Z
     a0a:	81 11       	cpse	r24, r1
     a0c:	ed cf       	rjmp	.-38     	; 0x9e8 <__stack+0x189>
     a0e:	82 e2       	ldi	r24, 0x22	; 34
     a10:	8c b9       	out	0x0c, r24	; 12
     a12:	8f e0       	ldi	r24, 0x0F	; 15
     a14:	97 e2       	ldi	r25, 0x27	; 39
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	f1 f7       	brne	.-4      	; 0xa16 <__stack+0x1b7>
     a1a:	00 c0       	rjmp	.+0      	; 0xa1c <__stack+0x1bd>
     a1c:	00 00       	nop
     a1e:	8d e0       	ldi	r24, 0x0D	; 13
     a20:	8c b9       	out	0x0c, r24	; 12
     a22:	8f e0       	ldi	r24, 0x0F	; 15
     a24:	97 e2       	ldi	r25, 0x27	; 39
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	f1 f7       	brne	.-4      	; 0xa26 <__stack+0x1c7>
     a2a:	00 c0       	rjmp	.+0      	; 0xa2c <__stack+0x1cd>
     a2c:	00 00       	nop
     a2e:	00 e0       	ldi	r16, 0x00	; 0
     a30:	10 e0       	ldi	r17, 0x00	; 0
     a32:	0a c0       	rjmp	.+20     	; 0xa48 <__stack+0x1e9>
     a34:	0e 94 10 04 	call	0x820	; 0x820 <USART_TxChar>
     a38:	8f e0       	ldi	r24, 0x0F	; 15
     a3a:	97 e2       	ldi	r25, 0x27	; 39
     a3c:	01 97       	sbiw	r24, 0x01	; 1
     a3e:	f1 f7       	brne	.-4      	; 0xa3c <__stack+0x1dd>
     a40:	00 c0       	rjmp	.+0      	; 0xa42 <__stack+0x1e3>
     a42:	00 00       	nop
     a44:	0f 5f       	subi	r16, 0xFF	; 255
     a46:	1f 4f       	sbci	r17, 0xFF	; 255
     a48:	f7 01       	movw	r30, r14
     a4a:	e0 0f       	add	r30, r16
     a4c:	f1 1f       	adc	r31, r17
     a4e:	80 81       	ld	r24, Z
     a50:	81 11       	cpse	r24, r1
     a52:	f0 cf       	rjmp	.-32     	; 0xa34 <__stack+0x1d5>
     a54:	9f ef       	ldi	r25, 0xFF	; 255
     a56:	21 ee       	ldi	r18, 0xE1	; 225
     a58:	84 e0       	ldi	r24, 0x04	; 4
     a5a:	91 50       	subi	r25, 0x01	; 1
     a5c:	20 40       	sbci	r18, 0x00	; 0
     a5e:	80 40       	sbci	r24, 0x00	; 0
     a60:	e1 f7       	brne	.-8      	; 0xa5a <__stack+0x1fb>
     a62:	00 c0       	rjmp	.+0      	; 0xa64 <__stack+0x205>
     a64:	00 00       	nop
     a66:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
     a6a:	44 ed       	ldi	r20, 0xD4	; 212
     a6c:	50 e0       	ldi	r21, 0x00	; 0
     a6e:	60 e0       	ldi	r22, 0x00	; 0
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	0e 94 89 03 	call	0x712	; 0x712 <LCD_String_xy>
     a76:	9f ef       	ldi	r25, 0xFF	; 255
     a78:	22 e5       	ldi	r18, 0x52	; 82
     a7a:	87 e0       	ldi	r24, 0x07	; 7
     a7c:	91 50       	subi	r25, 0x01	; 1
     a7e:	20 40       	sbci	r18, 0x00	; 0
     a80:	80 40       	sbci	r24, 0x00	; 0
     a82:	e1 f7       	brne	.-8      	; 0xa7c <__stack+0x21d>
     a84:	00 c0       	rjmp	.+0      	; 0xa86 <__stack+0x227>
     a86:	00 00       	nop
     a88:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
     a8c:	a3 96       	adiw	r28, 0x23	; 35
     a8e:	0f b6       	in	r0, 0x3f	; 63
     a90:	f8 94       	cli
     a92:	de bf       	out	0x3e, r29	; 62
     a94:	0f be       	out	0x3f, r0	; 63
     a96:	cd bf       	out	0x3d, r28	; 61
     a98:	df 91       	pop	r29
     a9a:	cf 91       	pop	r28
     a9c:	1f 91       	pop	r17
     a9e:	0f 91       	pop	r16
     aa0:	ff 90       	pop	r15
     aa2:	ef 90       	pop	r14
     aa4:	df 90       	pop	r13
     aa6:	cf 90       	pop	r12
     aa8:	08 95       	ret

00000aaa <get_altitude>:
	sei(); //It is a macro that executes an assembler instruction to enable interrupts.

}

void get_altitude(uint16_t alt_pointer){  //unsigned 16-bit integer - integers between 0 and 65,535
	cli(); //Command Line Interface - CLIs accept as input commands that are entered by keyboard
     aaa:	f8 94       	cli
	uint8_t alt_index;  //unsigned 8-bit integer- integer has a range of 0 to 255
	uint8_t index = alt_pointer+1;
     aac:	8f 5f       	subi	r24, 0xFF	; 255
	alt_index=0;
     aae:	90 e0       	ldi	r25, 0x00	; 0
	/* parse Altitude in GGA string stored in buffer */
	for( ; GGA_Buffer[index]!=','; index++){
     ab0:	07 c0       	rjmp	.+14     	; 0xac0 <get_altitude+0x16>
		Altitude_Buffer[alt_index]= GGA_Buffer[index];
     ab2:	e9 2f       	mov	r30, r25
     ab4:	f0 e0       	ldi	r31, 0x00	; 0
     ab6:	e6 54       	subi	r30, 0x46	; 70
     ab8:	fd 4f       	sbci	r31, 0xFD	; 253
     aba:	20 83       	st	Z, r18
		alt_index++;
     abc:	9f 5f       	subi	r25, 0xFF	; 255
	cli(); //Command Line Interface - CLIs accept as input commands that are entered by keyboard
	uint8_t alt_index;  //unsigned 8-bit integer- integer has a range of 0 to 255
	uint8_t index = alt_pointer+1;
	alt_index=0;
	/* parse Altitude in GGA string stored in buffer */
	for( ; GGA_Buffer[index]!=','; index++){
     abe:	8f 5f       	subi	r24, 0xFF	; 255
     ac0:	48 2f       	mov	r20, r24
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	fa 01       	movw	r30, r20
     ac6:	e5 55       	subi	r30, 0x55	; 85
     ac8:	fe 4f       	sbci	r31, 0xFE	; 254
     aca:	20 81       	ld	r18, Z
     acc:	2c 32       	cpi	r18, 0x2C	; 44
     ace:	89 f7       	brne	.-30     	; 0xab2 <get_altitude+0x8>
		Altitude_Buffer[alt_index]= GGA_Buffer[index];
		alt_index++;
	}
	
	Altitude_Buffer[alt_index]   = GGA_Buffer[index+1];
     ad0:	e9 2f       	mov	r30, r25
     ad2:	f0 e0       	ldi	r31, 0x00	; 0
     ad4:	da 01       	movw	r26, r20
     ad6:	a4 55       	subi	r26, 0x54	; 84
     ad8:	be 4f       	sbci	r27, 0xFE	; 254
     ada:	8c 91       	ld	r24, X
     adc:	e6 54       	subi	r30, 0x46	; 70
     ade:	fd 4f       	sbci	r31, 0xFD	; 253
     ae0:	80 83       	st	Z, r24
	sei();//It is a macro that executes an assembler instruction to enable interrupts.
     ae2:	78 94       	sei
     ae4:	08 95       	ret

00000ae6 <convert_to_degrees_lat>:
}


void convert_to_degrees_lat(char *raw){
     ae6:	8f 92       	push	r8
     ae8:	9f 92       	push	r9
     aea:	af 92       	push	r10
     aec:	bf 92       	push	r11
     aee:	cf 92       	push	r12
     af0:	df 92       	push	r13
     af2:	ef 92       	push	r14
     af4:	ff 92       	push	r15
     af6:	0f 93       	push	r16
     af8:	1f 93       	push	r17
	float decimal_value,temp;
	
	int32_t degrees;
	
	float position;
	value = atof(raw); /* convert string into float for conversion */
     afa:	0e 94 b0 0a 	call	0x1560	; 0x1560 <atof>
	
	/* convert raw latitude/longitude into degree format */
	decimal_value = (value/100);
     afe:	20 e0       	ldi	r18, 0x00	; 0
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	48 ec       	ldi	r20, 0xC8	; 200
     b04:	52 e4       	ldi	r21, 0x42	; 66
     b06:	0e 94 a2 08 	call	0x1144	; 0x1144 <__divsf3>
     b0a:	6b 01       	movw	r12, r22
     b0c:	7c 01       	movw	r14, r24
	degrees = (int)(decimal_value);
     b0e:	0e 94 14 09 	call	0x1228	; 0x1228 <__fixsfsi>
	temp = (decimal_value - (int)decimal_value)/0.6;
     b12:	07 2e       	mov	r0, r23
     b14:	00 0c       	add	r0, r0
     b16:	88 0b       	sbc	r24, r24
     b18:	99 0b       	sbc	r25, r25
     b1a:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     b1e:	4b 01       	movw	r8, r22
     b20:	5c 01       	movw	r10, r24
     b22:	9b 01       	movw	r18, r22
     b24:	ac 01       	movw	r20, r24
     b26:	c7 01       	movw	r24, r14
     b28:	b6 01       	movw	r22, r12
     b2a:	0e 94 30 08 	call	0x1060	; 0x1060 <__subsf3>
     b2e:	2a e9       	ldi	r18, 0x9A	; 154
     b30:	39 e9       	ldi	r19, 0x99	; 153
     b32:	49 e1       	ldi	r20, 0x19	; 25
     b34:	5f e3       	ldi	r21, 0x3F	; 63
     b36:	0e 94 a2 08 	call	0x1144	; 0x1144 <__divsf3>
     b3a:	9b 01       	movw	r18, r22
     b3c:	ac 01       	movw	r20, r24
	position = (float)degrees + temp;
     b3e:	c5 01       	movw	r24, r10
     b40:	b4 01       	movw	r22, r8
     b42:	0e 94 31 08 	call	0x1062	; 0x1062 <__addsf3>
	
	dtostrf(position, 6, 4, lat_degrees_buffer); /* dtostrf is a function that convert float value into string.Here the position is a float value and it convert as a string degree buffer variable*/
     b46:	06 ea       	ldi	r16, 0xA6	; 166
     b48:	12 e0       	ldi	r17, 0x02	; 2
     b4a:	24 e0       	ldi	r18, 0x04	; 4
     b4c:	46 e0       	ldi	r20, 0x06	; 6
     b4e:	0e 94 90 0a 	call	0x1520	; 0x1520 <dtostrf>
}
     b52:	1f 91       	pop	r17
     b54:	0f 91       	pop	r16
     b56:	ff 90       	pop	r15
     b58:	ef 90       	pop	r14
     b5a:	df 90       	pop	r13
     b5c:	cf 90       	pop	r12
     b5e:	bf 90       	pop	r11
     b60:	af 90       	pop	r10
     b62:	9f 90       	pop	r9
     b64:	8f 90       	pop	r8
     b66:	08 95       	ret

00000b68 <get_latitude>:
		i++;
	}
}

void get_latitude(uint16_t lat_pointer){  //unsigned 16-bit integer - integers between 0 and 65,535
	cli(); //Command Line Interface - CLIs accept as input commands that are entered by keyboard
     b68:	f8 94       	cli
	uint8_t lat_index; //unsigned 8-bit integer- integer has a range of 0 to 255
	uint8_t index = lat_pointer+1;//unsigned 8-bit integer- integer has a range of 0 to 255
     b6a:	8f 5f       	subi	r24, 0xFF	; 255
	lat_index=0;
     b6c:	90 e0       	ldi	r25, 0x00	; 0
	
	/* parse Latitude in GGA string stored in buffer */
	for(;GGA_Buffer[index]!=',';index++){
     b6e:	07 c0       	rjmp	.+14     	; 0xb7e <get_latitude+0x16>
		Latitude_Buffer[lat_index]= GGA_Buffer[index];
     b70:	e9 2f       	mov	r30, r25
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	e1 58       	subi	r30, 0x81	; 129
     b76:	fd 4f       	sbci	r31, 0xFD	; 253
     b78:	20 83       	st	Z, r18
		lat_index++;
     b7a:	9f 5f       	subi	r25, 0xFF	; 255
	uint8_t lat_index; //unsigned 8-bit integer- integer has a range of 0 to 255
	uint8_t index = lat_pointer+1;//unsigned 8-bit integer- integer has a range of 0 to 255
	lat_index=0;
	
	/* parse Latitude in GGA string stored in buffer */
	for(;GGA_Buffer[index]!=',';index++){
     b7c:	8f 5f       	subi	r24, 0xFF	; 255
     b7e:	e8 2f       	mov	r30, r24
     b80:	f0 e0       	ldi	r31, 0x00	; 0
     b82:	e5 55       	subi	r30, 0x55	; 85
     b84:	fe 4f       	sbci	r31, 0xFE	; 254
     b86:	20 81       	ld	r18, Z
     b88:	2c 32       	cpi	r18, 0x2C	; 44
     b8a:	91 f7       	brne	.-28     	; 0xb70 <get_latitude+0x8>
		Latitude_Buffer[lat_index]= GGA_Buffer[index];
		lat_index++;
	}
	
	Latitude_Buffer[lat_index++] = GGA_Buffer[index++];
     b8c:	31 e0       	ldi	r19, 0x01	; 1
     b8e:	39 0f       	add	r19, r25
     b90:	e9 2f       	mov	r30, r25
     b92:	f0 e0       	ldi	r31, 0x00	; 0
     b94:	8f 5f       	subi	r24, 0xFF	; 255
     b96:	e1 58       	subi	r30, 0x81	; 129
     b98:	fd 4f       	sbci	r31, 0xFD	; 253
     b9a:	20 83       	st	Z, r18
	Latitude_Buffer[lat_index]= GGA_Buffer[index];		/* get direction */
     b9c:	23 2f       	mov	r18, r19
     b9e:	30 e0       	ldi	r19, 0x00	; 0
     ba0:	e8 2f       	mov	r30, r24
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	e5 55       	subi	r30, 0x55	; 85
     ba6:	fe 4f       	sbci	r31, 0xFE	; 254
     ba8:	80 81       	ld	r24, Z
     baa:	f9 01       	movw	r30, r18
     bac:	e1 58       	subi	r30, 0x81	; 129
     bae:	fd 4f       	sbci	r31, 0xFD	; 253
     bb0:	80 83       	st	Z, r24
	convert_to_degrees_lat(Latitude_Buffer);   // convert raw latitude into degree format and pass that value as string
     bb2:	8f e7       	ldi	r24, 0x7F	; 127
     bb4:	92 e0       	ldi	r25, 0x02	; 2
     bb6:	0e 94 73 05 	call	0xae6	; 0xae6 <convert_to_degrees_lat>
	sei(); //It is a macro that executes an assembler instruction to enable interrupts.
     bba:	78 94       	sei
     bbc:	08 95       	ret

00000bbe <convert_to_degrees_long>:
	position = (float)degrees + temp;
	
	dtostrf(position, 6, 4, lat_degrees_buffer); /* dtostrf is a function that convert float value into string.Here the position is a float value and it convert as a string degree buffer variable*/
}

void convert_to_degrees_long(char *raw){
     bbe:	8f 92       	push	r8
     bc0:	9f 92       	push	r9
     bc2:	af 92       	push	r10
     bc4:	bf 92       	push	r11
     bc6:	cf 92       	push	r12
     bc8:	df 92       	push	r13
     bca:	ef 92       	push	r14
     bcc:	ff 92       	push	r15
     bce:	0f 93       	push	r16
     bd0:	1f 93       	push	r17
	float decimal_value,temp;
	
	int32_t degrees;
	
	float position;
	value = atof(raw); /* convert string into float for conversion */
     bd2:	0e 94 b0 0a 	call	0x1560	; 0x1560 <atof>
	
	/* convert raw latitude/longitude into degree format */
	decimal_value = (value/100);
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	48 ec       	ldi	r20, 0xC8	; 200
     bdc:	52 e4       	ldi	r21, 0x42	; 66
     bde:	0e 94 a2 08 	call	0x1144	; 0x1144 <__divsf3>
     be2:	6b 01       	movw	r12, r22
     be4:	7c 01       	movw	r14, r24
	degrees = (int)(decimal_value);
     be6:	0e 94 14 09 	call	0x1228	; 0x1228 <__fixsfsi>
	temp = (decimal_value - (int)decimal_value)/0.6;
     bea:	07 2e       	mov	r0, r23
     bec:	00 0c       	add	r0, r0
     bee:	88 0b       	sbc	r24, r24
     bf0:	99 0b       	sbc	r25, r25
     bf2:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     bf6:	4b 01       	movw	r8, r22
     bf8:	5c 01       	movw	r10, r24
     bfa:	9b 01       	movw	r18, r22
     bfc:	ac 01       	movw	r20, r24
     bfe:	c7 01       	movw	r24, r14
     c00:	b6 01       	movw	r22, r12
     c02:	0e 94 30 08 	call	0x1060	; 0x1060 <__subsf3>
     c06:	2a e9       	ldi	r18, 0x9A	; 154
     c08:	39 e9       	ldi	r19, 0x99	; 153
     c0a:	49 e1       	ldi	r20, 0x19	; 25
     c0c:	5f e3       	ldi	r21, 0x3F	; 63
     c0e:	0e 94 a2 08 	call	0x1144	; 0x1144 <__divsf3>
     c12:	9b 01       	movw	r18, r22
     c14:	ac 01       	movw	r20, r24
	position = (float)degrees + temp;
     c16:	c5 01       	movw	r24, r10
     c18:	b4 01       	movw	r22, r8
     c1a:	0e 94 31 08 	call	0x1062	; 0x1062 <__addsf3>
	
	dtostrf(position, 6, 4, long_degrees_buffer); /* dtostrf is a function that convert float value into string.Here the position is a float value and it convert as a string degree buffer variable*/
     c1e:	0d e4       	ldi	r16, 0x4D	; 77
     c20:	12 e0       	ldi	r17, 0x02	; 2
     c22:	24 e0       	ldi	r18, 0x04	; 4
     c24:	46 e0       	ldi	r20, 0x06	; 6
     c26:	0e 94 90 0a 	call	0x1520	; 0x1520 <dtostrf>
}
     c2a:	1f 91       	pop	r17
     c2c:	0f 91       	pop	r16
     c2e:	ff 90       	pop	r15
     c30:	ef 90       	pop	r14
     c32:	df 90       	pop	r13
     c34:	cf 90       	pop	r12
     c36:	bf 90       	pop	r11
     c38:	af 90       	pop	r10
     c3a:	9f 90       	pop	r9
     c3c:	8f 90       	pop	r8
     c3e:	08 95       	ret

00000c40 <get_longitude>:
	convert_to_degrees_lat(Latitude_Buffer);   // convert raw latitude into degree format and pass that value as string
	sei(); //It is a macro that executes an assembler instruction to enable interrupts.
}

void get_longitude(uint16_t long_pointer){
	cli(); //Command Line Interface - CLIs accept as input commands that are entered by keyboard
     c40:	f8 94       	cli
	uint8_t long_index;  //unsigned 8-bit integer- integer has a range of 0 to 255
	uint8_t index = long_pointer+1;
     c42:	8f 5f       	subi	r24, 0xFF	; 255
	long_index=0;
     c44:	90 e0       	ldi	r25, 0x00	; 0
	
	/* parse Longitude in GGA string stored in buffer */
	for( ; GGA_Buffer[index]!=','; index++){
     c46:	07 c0       	rjmp	.+14     	; 0xc56 <get_longitude+0x16>
		Longitude_Buffer[long_index]= GGA_Buffer[index];
     c48:	e9 2f       	mov	r30, r25
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	ef 59       	subi	r30, 0x9F	; 159
     c4e:	fd 4f       	sbci	r31, 0xFD	; 253
     c50:	20 83       	st	Z, r18
		long_index++;
     c52:	9f 5f       	subi	r25, 0xFF	; 255
	uint8_t long_index;  //unsigned 8-bit integer- integer has a range of 0 to 255
	uint8_t index = long_pointer+1;
	long_index=0;
	
	/* parse Longitude in GGA string stored in buffer */
	for( ; GGA_Buffer[index]!=','; index++){
     c54:	8f 5f       	subi	r24, 0xFF	; 255
     c56:	e8 2f       	mov	r30, r24
     c58:	f0 e0       	ldi	r31, 0x00	; 0
     c5a:	e5 55       	subi	r30, 0x55	; 85
     c5c:	fe 4f       	sbci	r31, 0xFE	; 254
     c5e:	20 81       	ld	r18, Z
     c60:	2c 32       	cpi	r18, 0x2C	; 44
     c62:	91 f7       	brne	.-28     	; 0xc48 <get_longitude+0x8>
		Longitude_Buffer[long_index]= GGA_Buffer[index];
		long_index++;
	}
	
	Longitude_Buffer[long_index++] = GGA_Buffer[index++];
     c64:	31 e0       	ldi	r19, 0x01	; 1
     c66:	39 0f       	add	r19, r25
     c68:	e9 2f       	mov	r30, r25
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	8f 5f       	subi	r24, 0xFF	; 255
     c6e:	ef 59       	subi	r30, 0x9F	; 159
     c70:	fd 4f       	sbci	r31, 0xFD	; 253
     c72:	20 83       	st	Z, r18
	Longitude_Buffer[long_index]   = GGA_Buffer[index]; /* get direction */
     c74:	23 2f       	mov	r18, r19
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	e8 2f       	mov	r30, r24
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	e5 55       	subi	r30, 0x55	; 85
     c7e:	fe 4f       	sbci	r31, 0xFE	; 254
     c80:	80 81       	ld	r24, Z
     c82:	f9 01       	movw	r30, r18
     c84:	ef 59       	subi	r30, 0x9F	; 159
     c86:	fd 4f       	sbci	r31, 0xFD	; 253
     c88:	80 83       	st	Z, r24
	convert_to_degrees_long(Longitude_Buffer); // convert raw longitude into degree format and pass that value as string
     c8a:	81 e6       	ldi	r24, 0x61	; 97
     c8c:	92 e0       	ldi	r25, 0x02	; 2
     c8e:	0e 94 df 05 	call	0xbbe	; 0xbbe <convert_to_degrees_long>
	sei(); //It is a macro that executes an assembler instruction to enable interrupts.
     c92:	78 94       	sei
     c94:	08 95       	ret

00000c96 <sendLocation>:
	}else{
		return 0; 
	}
}

void sendLocation(char* message){
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	8c 01       	movw	r16, r24
	get_latitude(GGA_Pointers[0]);
     ca0:	c2 e9       	ldi	r28, 0x92	; 146
     ca2:	d2 e0       	ldi	r29, 0x02	; 2
     ca4:	88 81       	ld	r24, Y
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 b4 05 	call	0xb68	; 0xb68 <get_latitude>
	char* lat=lat_degrees_buffer;
	get_longitude(GGA_Pointers[2]);
     cac:	8a 81       	ldd	r24, Y+2	; 0x02
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	0e 94 20 06 	call	0xc40	; 0xc40 <get_longitude>
	char* lngtd=long_degrees_buffer;
	get_altitude(GGA_Pointers[7]);
     cb4:	8f 81       	ldd	r24, Y+7	; 0x07
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 55 05 	call	0xaaa	; 0xaaa <get_altitude>
	char* altitude=Altitude_Buffer;
	PORTD=0x04;// change signal using mux
     cbc:	84 e0       	ldi	r24, 0x04	; 4
     cbe:	82 bb       	out	0x12, r24	; 18
	sendMessage(message,lat,lngtd,altitude);
     cc0:	2a eb       	ldi	r18, 0xBA	; 186
     cc2:	32 e0       	ldi	r19, 0x02	; 2
     cc4:	4d e4       	ldi	r20, 0x4D	; 77
     cc6:	52 e0       	ldi	r21, 0x02	; 2
     cc8:	66 ea       	ldi	r22, 0xA6	; 166
     cca:	72 e0       	ldi	r23, 0x02	; 2
     ccc:	c8 01       	movw	r24, r16
     cce:	0e 94 14 04 	call	0x828	; 0x828 <sendMessage>
	PORTD=0x00;// turn back to normal
     cd2:	12 ba       	out	0x12, r1	; 18
}
     cd4:	df 91       	pop	r29
     cd6:	cf 91       	pop	r28
     cd8:	1f 91       	pop	r17
     cda:	0f 91       	pop	r16
     cdc:	08 95       	ret

00000cde <main>:
char long_degrees_buffer[degrees_buffer_size];
char GGA_Buffer[Buffer_Size];
float Acc_x,Acc_y,Acc_z,Temperature,Gyro_x,Gyro_y,Gyro_z;

int main(void){
	DDRD=0xE4;
     cde:	84 ee       	ldi	r24, 0xE4	; 228
     ce0:	81 bb       	out	0x11, r24	; 17
	LCD_Init();
     ce2:	0e 94 4f 03 	call	0x69e	; 0x69e <LCD_Init>
	LCD_String("Initializing..");
     ce6:	86 ef       	ldi	r24, 0xF6	; 246
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cee:	2f e7       	ldi	r18, 0x7F	; 127
     cf0:	38 e3       	ldi	r19, 0x38	; 56
     cf2:	41 e0       	ldi	r20, 0x01	; 1
     cf4:	21 50       	subi	r18, 0x01	; 1
     cf6:	30 40       	sbci	r19, 0x00	; 0
     cf8:	40 40       	sbci	r20, 0x00	; 0
     cfa:	e1 f7       	brne	.-8      	; 0xcf4 <main+0x16>
     cfc:	00 c0       	rjmp	.+0      	; 0xcfe <main+0x20>
     cfe:	00 00       	nop
	_delay_ms(50);
	LCD_Clear();
     d00:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
	I2C_Init();
     d04:	0e 94 19 01 	call	0x232	; 0x232 <I2C_Init>
	MPU6050_Init();
     d08:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <MPU6050_Init>
	PWM_init();
     d0c:	0e 94 13 01 	call	0x226	; 0x226 <PWM_init>
	GGA_Index=0;
     d10:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <GGA_Index+0x1>
     d14:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <GGA_Index>
	USART_Init(9600);
     d18:	60 e8       	ldi	r22, 0x80	; 128
     d1a:	75 e2       	ldi	r23, 0x25	; 37
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <USART_Init>
	sei();
     d24:	78 94       	sei
	start:
	LCD_String("Welcome");
     d26:	85 e0       	ldi	r24, 0x05	; 5
     d28:	91 e0       	ldi	r25, 0x01	; 1
     d2a:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
     d2e:	8f ef       	ldi	r24, 0xFF	; 255
     d30:	90 e7       	ldi	r25, 0x70	; 112
     d32:	22 e0       	ldi	r18, 0x02	; 2
     d34:	81 50       	subi	r24, 0x01	; 1
     d36:	90 40       	sbci	r25, 0x00	; 0
     d38:	20 40       	sbci	r18, 0x00	; 0
     d3a:	e1 f7       	brne	.-8      	; 0xd34 <main+0x56>
     d3c:	00 c0       	rjmp	.+0      	; 0xd3e <main+0x60>
     d3e:	00 00       	nop
	_delay_ms(100);
	LCD_Clear();
     d40:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
	float Xa,Ya,Za; // for gyroscope
	while (1){
		//flame detection
		if(pinRead(PINC,flame)==0x10){
     d44:	9c 9b       	sbis	0x13, 4	; 19
     d46:	1e c0       	rjmp	.+60     	; 0xd84 <main+0xa6>
			LCD_Clear();
     d48:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
			LCD_String("Flame Detected !");
     d4c:	8d e0       	ldi	r24, 0x0D	; 13
     d4e:	91 e0       	ldi	r25, 0x01	; 1
     d50:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
			ringAlarm();
     d54:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <ringAlarm>
			onHazardLight();
     d58:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <onHazardLight>
     d5c:	3f ef       	ldi	r19, 0xFF	; 255
     d5e:	44 e3       	ldi	r20, 0x34	; 52
     d60:	8c e0       	ldi	r24, 0x0C	; 12
     d62:	31 50       	subi	r19, 0x01	; 1
     d64:	40 40       	sbci	r20, 0x00	; 0
     d66:	80 40       	sbci	r24, 0x00	; 0
     d68:	e1 f7       	brne	.-8      	; 0xd62 <main+0x84>
     d6a:	00 c0       	rjmp	.+0      	; 0xd6c <main+0x8e>
     d6c:	00 00       	nop
			_delay_ms(500);
			stopAlarm();
     d6e:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <stopAlarm>
			offHazardLight();
     d72:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <offHazardLight>
			LCD_Clear();
     d76:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
			sendLocation("Flame is Detected");
     d7a:	8e e1       	ldi	r24, 0x1E	; 30
     d7c:	91 e0       	ldi	r25, 0x01	; 1
     d7e:	0e 94 4b 06 	call	0xc96	; 0xc96 <sendLocation>
     d82:	e0 cf       	rjmp	.-64     	; 0xd44 <main+0x66>
		}
		else{
			ADC_Init();
     d84:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <ADC_Init>
			int val=ADC_Read(0);
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <ADC_Read>
			float speed=(val/1024.0)*255.0;
     d8e:	bc 01       	movw	r22, r24
     d90:	99 0f       	add	r25, r25
     d92:	88 0b       	sbc	r24, r24
     d94:	99 0b       	sbc	r25, r25
     d96:	0e 94 4c 09 	call	0x1298	; 0x1298 <__floatsisf>
     d9a:	20 e0       	ldi	r18, 0x00	; 0
     d9c:	30 e0       	ldi	r19, 0x00	; 0
     d9e:	40 e8       	ldi	r20, 0x80	; 128
     da0:	5a e3       	ldi	r21, 0x3A	; 58
     da2:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     da6:	20 e0       	ldi	r18, 0x00	; 0
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	4f e7       	ldi	r20, 0x7F	; 127
     dac:	53 e4       	ldi	r21, 0x43	; 67
     dae:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
			OCR0=(int)speed;
     db2:	0e 94 14 09 	call	0x1228	; 0x1228 <__fixsfsi>
     db6:	6c bf       	out	0x3c, r22	; 60
			//get pressure
			int value = ADC_Read(1);
     db8:	81 e0       	ldi	r24, 0x01	; 1
     dba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <ADC_Read>
			if (value > 109){// if value gt 109 vehicle is moving
     dbe:	8e 36       	cpi	r24, 0x6E	; 110
     dc0:	91 05       	cpc	r25, r1
     dc2:	0c f4       	brge	.+2      	; 0xdc6 <main+0xe8>
     dc4:	c6 c0       	rjmp	.+396    	; 0xf52 <main+0x274>
				LCD_Clear();
     dc6:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
				LCD_String("Driving mode");
     dca:	80 e3       	ldi	r24, 0x30	; 48
     dcc:	91 e0       	ldi	r25, 0x01	; 1
     dce:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
				if(pinRead(PINC,alcohol)==0x20){
     dd2:	9d 9b       	sbis	0x13, 5	; 19
     dd4:	1a c0       	rjmp	.+52     	; 0xe0a <main+0x12c>
					LCD_Clear();
     dd6:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
					LCD_String("Alcohol Detected");
     dda:	8d e3       	ldi	r24, 0x3D	; 61
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
					ringAlarm();
     de2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <ringAlarm>
     de6:	9f ef       	ldi	r25, 0xFF	; 255
     de8:	20 e7       	ldi	r18, 0x70	; 112
     dea:	32 e0       	ldi	r19, 0x02	; 2
     dec:	91 50       	subi	r25, 0x01	; 1
     dee:	20 40       	sbci	r18, 0x00	; 0
     df0:	30 40       	sbci	r19, 0x00	; 0
     df2:	e1 f7       	brne	.-8      	; 0xdec <main+0x10e>
     df4:	00 c0       	rjmp	.+0      	; 0xdf6 <main+0x118>
     df6:	00 00       	nop
					_delay_ms(100);
					stopAlarm();
     df8:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <stopAlarm>
					LCD_Clear();
     dfc:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
					sendLocation("Alcohol Detected");
     e00:	8d e3       	ldi	r24, 0x3D	; 61
     e02:	91 e0       	ldi	r25, 0x01	; 1
     e04:	0e 94 4b 06 	call	0xc96	; 0xc96 <sendLocation>
     e08:	9d cf       	rjmp	.-198    	; 0xd44 <main+0x66>
				}
				else{
					Read_RawValue();
     e0a:	0e 94 c5 01 	call	0x38a	; 0x38a <Read_RawValue>
					Xa = (Acc_x/16384.0)*9.8066;
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e8       	ldi	r20, 0x80	; 128
     e14:	58 e3       	ldi	r21, 0x38	; 56
     e16:	60 91 74 02 	lds	r22, 0x0274	; 0x800274 <Acc_x>
     e1a:	70 91 75 02 	lds	r23, 0x0275	; 0x800275 <Acc_x+0x1>
     e1e:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Acc_x+0x2>
     e22:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Acc_x+0x3>
     e26:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     e2a:	25 ed       	ldi	r18, 0xD5	; 213
     e2c:	37 ee       	ldi	r19, 0xE7	; 231
     e2e:	4c e1       	ldi	r20, 0x1C	; 28
     e30:	51 e4       	ldi	r21, 0x41	; 65
     e32:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     e36:	4b 01       	movw	r8, r22
     e38:	5c 01       	movw	r10, r24
					Ya = (Acc_y/16384.0)*9.8066;
     e3a:	20 e0       	ldi	r18, 0x00	; 0
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	40 e8       	ldi	r20, 0x80	; 128
     e40:	58 e3       	ldi	r21, 0x38	; 56
     e42:	60 91 49 02 	lds	r22, 0x0249	; 0x800249 <Acc_y>
     e46:	70 91 4a 02 	lds	r23, 0x024A	; 0x80024a <Acc_y+0x1>
     e4a:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <Acc_y+0x2>
     e4e:	90 91 4c 02 	lds	r25, 0x024C	; 0x80024c <Acc_y+0x3>
     e52:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     e56:	25 ed       	ldi	r18, 0xD5	; 213
     e58:	37 ee       	ldi	r19, 0xE7	; 231
     e5a:	4c e1       	ldi	r20, 0x1C	; 28
     e5c:	51 e4       	ldi	r21, 0x41	; 65
     e5e:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     e62:	2b 01       	movw	r4, r22
     e64:	3c 01       	movw	r6, r24
					Za = (Acc_z/16384.0)*9.8066;
     e66:	20 e0       	ldi	r18, 0x00	; 0
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	40 e8       	ldi	r20, 0x80	; 128
     e6c:	58 e3       	ldi	r21, 0x38	; 56
     e6e:	60 91 a7 01 	lds	r22, 0x01A7	; 0x8001a7 <Acc_z>
     e72:	70 91 a8 01 	lds	r23, 0x01A8	; 0x8001a8 <Acc_z+0x1>
     e76:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <Acc_z+0x2>
     e7a:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <Acc_z+0x3>
     e7e:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     e82:	25 ed       	ldi	r18, 0xD5	; 213
     e84:	37 ee       	ldi	r19, 0xE7	; 231
     e86:	4c e1       	ldi	r20, 0x1C	; 28
     e88:	51 e4       	ldi	r21, 0x41	; 65
     e8a:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
     e8e:	6b 01       	movw	r12, r22
     e90:	7c 01       	movw	r14, r24
					if(isDriverSleepingIR() && isDriverSleepingGyro(Xa,Ya,Za)){
     e92:	0e 94 b2 03 	call	0x764	; 0x764 <isDriverSleepingIR>
     e96:	89 2b       	or	r24, r25
     e98:	09 f4       	brne	.+2      	; 0xe9c <main+0x1be>
     e9a:	54 cf       	rjmp	.-344    	; 0xd44 <main+0x66>
     e9c:	87 01       	movw	r16, r14
     e9e:	76 01       	movw	r14, r12
     ea0:	a3 01       	movw	r20, r6
     ea2:	92 01       	movw	r18, r4
     ea4:	c5 01       	movw	r24, r10
     ea6:	b4 01       	movw	r22, r8
     ea8:	0e 94 76 02 	call	0x4ec	; 0x4ec <isDriverSleepingGyro>
     eac:	89 2b       	or	r24, r25
     eae:	09 f4       	brne	.+2      	; 0xeb2 <main+0x1d4>
     eb0:	49 cf       	rjmp	.-366    	; 0xd44 <main+0x66>
						LCD_Clear();
     eb2:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
						LCD_String("Sleeping");
     eb6:	87 e8       	ldi	r24, 0x87	; 135
     eb8:	91 e0       	ldi	r25, 0x01	; 1
     eba:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
						ringAlarm();
     ebe:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <ringAlarm>
						onHazardLight();
     ec2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <onHazardLight>
						LCD_Command(0xc0);
     ec6:	80 ec       	ldi	r24, 0xC0	; 192
     ec8:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
						LCD_String("Waiting..");
     ecc:	8e e4       	ldi	r24, 0x4E	; 78
     ece:	91 e0       	ldi	r25, 0x01	; 1
     ed0:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
						int x;
						//wait for 5 seconds on 20ms time interval
						for(x=1;x<=20;x++){
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	13 c0       	rjmp	.+38     	; 0xf00 <main+0x222>
							if(pinRead(PINC,3)==0x08){
     eda:	9b 9b       	sbis	0x13, 3	; 19
     edc:	07 c0       	rjmp	.+14     	; 0xeec <main+0x20e>
								stopAlarm();
     ede:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <stopAlarm>
								offHazardLight();
     ee2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <offHazardLight>
								LCD_Clear();
     ee6:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
								goto start;
     eea:	1d cf       	rjmp	.-454    	; 0xd26 <main+0x48>
     eec:	4f e7       	ldi	r20, 0x7F	; 127
     eee:	2a e1       	ldi	r18, 0x1A	; 26
     ef0:	36 e0       	ldi	r19, 0x06	; 6
     ef2:	41 50       	subi	r20, 0x01	; 1
     ef4:	20 40       	sbci	r18, 0x00	; 0
     ef6:	30 40       	sbci	r19, 0x00	; 0
     ef8:	e1 f7       	brne	.-8      	; 0xef2 <main+0x214>
     efa:	00 c0       	rjmp	.+0      	; 0xefc <main+0x21e>
     efc:	00 00       	nop
						onHazardLight();
						LCD_Command(0xc0);
						LCD_String("Waiting..");
						int x;
						//wait for 5 seconds on 20ms time interval
						for(x=1;x<=20;x++){
     efe:	01 96       	adiw	r24, 0x01	; 1
     f00:	85 31       	cpi	r24, 0x15	; 21
     f02:	91 05       	cpc	r25, r1
     f04:	54 f3       	brlt	.-44     	; 0xeda <main+0x1fc>
								LCD_Clear();
								goto start;
							}
							_delay_ms(250);
						}
						LCD_Clear();
     f06:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
						LCD_String("Waiting");
     f0a:	88 e5       	ldi	r24, 0x58	; 88
     f0c:	91 e0       	ldi	r25, 0x01	; 1
     f0e:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
						LCD_Command(0xc0);
     f12:	80 ec       	ldi	r24, 0xC0	; 192
     f14:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
						LCD_String("Complete");
     f18:	80 e6       	ldi	r24, 0x60	; 96
     f1a:	91 e0       	ldi	r25, 0x01	; 1
     f1c:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
						offHazardLight();
     f20:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <offHazardLight>
						stopAlarm();
     f24:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <stopAlarm>
						OCR0=0;
     f28:	1c be       	out	0x3c, r1	; 60
						LCD_Clear();
     f2a:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
						LCD_String("Speed is");
     f2e:	89 e6       	ldi	r24, 0x69	; 105
     f30:	91 e0       	ldi	r25, 0x01	; 1
     f32:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
						LCD_Command(0xc0);
     f36:	80 ec       	ldi	r24, 0xC0	; 192
     f38:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
						LCD_String("Reducing..");
     f3c:	82 e7       	ldi	r24, 0x72	; 114
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
						sendLocation("Driver is Sleeping");
     f44:	8d e7       	ldi	r24, 0x7D	; 125
     f46:	91 e0       	ldi	r25, 0x01	; 1
     f48:	0e 94 4b 06 	call	0xc96	; 0xc96 <sendLocation>
						playRadio();
     f4c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <playRadio>
     f50:	ff cf       	rjmp	.-2      	; 0xf50 <main+0x272>
						while(1){}//let motor to slowdown fully
					}
				}
			}else{
				LCD_String("Vehicle is");
     f52:	80 e9       	ldi	r24, 0x90	; 144
     f54:	91 e0       	ldi	r25, 0x01	; 1
     f56:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
				LCD_Command(0xc0);
     f5a:	80 ec       	ldi	r24, 0xC0	; 192
     f5c:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_Command>
				LCD_String("not moving");
     f60:	8b e9       	ldi	r24, 0x9B	; 155
     f62:	91 e0       	ldi	r25, 0x01	; 1
     f64:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LCD_String>
     f68:	4f e7       	ldi	r20, 0x7F	; 127
     f6a:	88 e3       	ldi	r24, 0x38	; 56
     f6c:	91 e0       	ldi	r25, 0x01	; 1
     f6e:	41 50       	subi	r20, 0x01	; 1
     f70:	80 40       	sbci	r24, 0x00	; 0
     f72:	90 40       	sbci	r25, 0x00	; 0
     f74:	e1 f7       	brne	.-8      	; 0xf6e <main+0x290>
     f76:	00 c0       	rjmp	.+0      	; 0xf78 <main+0x29a>
     f78:	00 00       	nop
				_delay_ms(50);
				LCD_Clear();
     f7a:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_Clear>
     f7e:	e2 ce       	rjmp	.-572    	; 0xd44 <main+0x66>

00000f80 <__vector_13>:
	
	dtostrf(position, 6, 4, long_degrees_buffer); /* dtostrf is a function that convert float value into string.Here the position is a float value and it convert as a string degree buffer variable*/
}

ISR (USART_RXC_vect)
{
     f80:	1f 92       	push	r1
     f82:	0f 92       	push	r0
     f84:	0f b6       	in	r0, 0x3f	; 63
     f86:	0f 92       	push	r0
     f88:	11 24       	eor	r1, r1
     f8a:	2f 93       	push	r18
     f8c:	3f 93       	push	r19
     f8e:	4f 93       	push	r20
     f90:	5f 93       	push	r21
     f92:	8f 93       	push	r24
     f94:	9f 93       	push	r25
     f96:	ef 93       	push	r30
     f98:	ff 93       	push	r31
	uint8_t oldsrg = SREG;  //unsigned 8-bit integer- integer has a range of 0 to 255
     f9a:	9f b7       	in	r25, 0x3f	; 63
	cli();					//Command Line Interface - CLIs accept as input commands that are entered by keyboard
     f9c:	f8 94       	cli
	char received_char = UDR;
     f9e:	8c b1       	in	r24, 0x0c	; 12
	
	if(received_char =='$'){                                                    /* check for '$' */
     fa0:	84 32       	cpi	r24, 0x24	; 36
     fa2:	59 f4       	brne	.+22     	; 0xfba <__vector_13+0x3a>
		GGA_Index = 0;
     fa4:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <GGA_Index+0x1>
     fa8:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <GGA_Index>
		CommaCounter = 0;
     fac:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <CommaCounter+0x1>
     fb0:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <CommaCounter>
		IsItGGAString = false;
     fb4:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <__data_end>
     fb8:	45 c0       	rjmp	.+138    	; 0x1044 <__vector_13+0xc4>
	}
	else if(IsItGGAString == true){                                             /* if true save GGA info. into buffer */
     fba:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <__data_end>
     fbe:	22 23       	and	r18, r18
     fc0:	29 f1       	breq	.+74     	; 0x100c <__vector_13+0x8c>
		if(received_char == ',' ) GGA_Pointers[CommaCounter++] = GGA_Index;     /* store instances of ',' in buffer */
     fc2:	8c 32       	cpi	r24, 0x2C	; 44
     fc4:	99 f4       	brne	.+38     	; 0xfec <__vector_13+0x6c>
     fc6:	20 91 78 02 	lds	r18, 0x0278	; 0x800278 <CommaCounter>
     fca:	30 91 79 02 	lds	r19, 0x0279	; 0x800279 <CommaCounter+0x1>
     fce:	a9 01       	movw	r20, r18
     fd0:	4f 5f       	subi	r20, 0xFF	; 255
     fd2:	5f 4f       	sbci	r21, 0xFF	; 255
     fd4:	50 93 79 02 	sts	0x0279, r21	; 0x800279 <CommaCounter+0x1>
     fd8:	40 93 78 02 	sts	0x0278, r20	; 0x800278 <CommaCounter>
     fdc:	40 91 7a 02 	lds	r20, 0x027A	; 0x80027a <GGA_Index>
     fe0:	50 91 7b 02 	lds	r21, 0x027B	; 0x80027b <GGA_Index+0x1>
     fe4:	f9 01       	movw	r30, r18
     fe6:	ee 56       	subi	r30, 0x6E	; 110
     fe8:	fd 4f       	sbci	r31, 0xFD	; 253
     fea:	40 83       	st	Z, r20
		GGA_Buffer[GGA_Index++] = received_char;
     fec:	20 91 7a 02 	lds	r18, 0x027A	; 0x80027a <GGA_Index>
     ff0:	30 91 7b 02 	lds	r19, 0x027B	; 0x80027b <GGA_Index+0x1>
     ff4:	a9 01       	movw	r20, r18
     ff6:	4f 5f       	subi	r20, 0xFF	; 255
     ff8:	5f 4f       	sbci	r21, 0xFF	; 255
     ffa:	50 93 7b 02 	sts	0x027B, r21	; 0x80027b <GGA_Index+0x1>
     ffe:	40 93 7a 02 	sts	0x027A, r20	; 0x80027a <GGA_Index>
    1002:	f9 01       	movw	r30, r18
    1004:	e5 55       	subi	r30, 0x55	; 85
    1006:	fe 4f       	sbci	r31, 0xFE	; 254
    1008:	80 83       	st	Z, r24
    100a:	1c c0       	rjmp	.+56     	; 0x1044 <__vector_13+0xc4>
	}
	else if(GGA_CODE[0] == 'G' && GGA_CODE[1] == 'G' && GGA_CODE[2] == 'A'){    /* check for GGA string */
    100c:	20 91 7c 02 	lds	r18, 0x027C	; 0x80027c <GGA_CODE>
    1010:	27 34       	cpi	r18, 0x47	; 71
    1012:	89 f4       	brne	.+34     	; 0x1036 <__vector_13+0xb6>
    1014:	20 91 7d 02 	lds	r18, 0x027D	; 0x80027d <GGA_CODE+0x1>
    1018:	27 34       	cpi	r18, 0x47	; 71
    101a:	69 f4       	brne	.+26     	; 0x1036 <__vector_13+0xb6>
    101c:	20 91 7e 02 	lds	r18, 0x027E	; 0x80027e <GGA_CODE+0x2>
    1020:	21 34       	cpi	r18, 0x41	; 65
    1022:	49 f4       	brne	.+18     	; 0x1036 <__vector_13+0xb6>
		IsItGGAString = true;
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__data_end>
		GGA_CODE[0] = 0; GGA_CODE[1] = 0; GGA_CODE[2] = 0;
    102a:	ec e7       	ldi	r30, 0x7C	; 124
    102c:	f2 e0       	ldi	r31, 0x02	; 2
    102e:	10 82       	st	Z, r1
    1030:	11 82       	std	Z+1, r1	; 0x01
    1032:	12 82       	std	Z+2, r1	; 0x02
    1034:	07 c0       	rjmp	.+14     	; 0x1044 <__vector_13+0xc4>
	}
	else{
		GGA_CODE[0] = GGA_CODE[1];  GGA_CODE[1] = GGA_CODE[2]; GGA_CODE[2] = received_char;
    1036:	ec e7       	ldi	r30, 0x7C	; 124
    1038:	f2 e0       	ldi	r31, 0x02	; 2
    103a:	21 81       	ldd	r18, Z+1	; 0x01
    103c:	20 83       	st	Z, r18
    103e:	22 81       	ldd	r18, Z+2	; 0x02
    1040:	21 83       	std	Z+1, r18	; 0x01
    1042:	82 83       	std	Z+2, r24	; 0x02
	}
	SREG = oldsrg;
    1044:	9f bf       	out	0x3f, r25	; 63
    1046:	ff 91       	pop	r31
    1048:	ef 91       	pop	r30
    104a:	9f 91       	pop	r25
    104c:	8f 91       	pop	r24
    104e:	5f 91       	pop	r21
    1050:	4f 91       	pop	r20
    1052:	3f 91       	pop	r19
    1054:	2f 91       	pop	r18
    1056:	0f 90       	pop	r0
    1058:	0f be       	out	0x3f, r0	; 63
    105a:	0f 90       	pop	r0
    105c:	1f 90       	pop	r1
    105e:	18 95       	reti

00001060 <__subsf3>:
    1060:	50 58       	subi	r21, 0x80	; 128

00001062 <__addsf3>:
    1062:	bb 27       	eor	r27, r27
    1064:	aa 27       	eor	r26, r26
    1066:	0e 94 48 08 	call	0x1090	; 0x1090 <__addsf3x>
    106a:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <__fp_round>
    106e:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_pscA>
    1072:	38 f0       	brcs	.+14     	; 0x1082 <__addsf3+0x20>
    1074:	0e 94 bb 09 	call	0x1376	; 0x1376 <__fp_pscB>
    1078:	20 f0       	brcs	.+8      	; 0x1082 <__addsf3+0x20>
    107a:	39 f4       	brne	.+14     	; 0x108a <__addsf3+0x28>
    107c:	9f 3f       	cpi	r25, 0xFF	; 255
    107e:	19 f4       	brne	.+6      	; 0x1086 <__addsf3+0x24>
    1080:	26 f4       	brtc	.+8      	; 0x108a <__addsf3+0x28>
    1082:	0c 94 b1 09 	jmp	0x1362	; 0x1362 <__fp_nan>
    1086:	0e f4       	brtc	.+2      	; 0x108a <__addsf3+0x28>
    1088:	e0 95       	com	r30
    108a:	e7 fb       	bst	r30, 7
    108c:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_inf>

00001090 <__addsf3x>:
    1090:	e9 2f       	mov	r30, r25
    1092:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fp_split3>
    1096:	58 f3       	brcs	.-42     	; 0x106e <__addsf3+0xc>
    1098:	ba 17       	cp	r27, r26
    109a:	62 07       	cpc	r22, r18
    109c:	73 07       	cpc	r23, r19
    109e:	84 07       	cpc	r24, r20
    10a0:	95 07       	cpc	r25, r21
    10a2:	20 f0       	brcs	.+8      	; 0x10ac <__addsf3x+0x1c>
    10a4:	79 f4       	brne	.+30     	; 0x10c4 <__addsf3x+0x34>
    10a6:	a6 f5       	brtc	.+104    	; 0x1110 <__addsf3x+0x80>
    10a8:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__fp_zero>
    10ac:	0e f4       	brtc	.+2      	; 0x10b0 <__addsf3x+0x20>
    10ae:	e0 95       	com	r30
    10b0:	0b 2e       	mov	r0, r27
    10b2:	ba 2f       	mov	r27, r26
    10b4:	a0 2d       	mov	r26, r0
    10b6:	0b 01       	movw	r0, r22
    10b8:	b9 01       	movw	r22, r18
    10ba:	90 01       	movw	r18, r0
    10bc:	0c 01       	movw	r0, r24
    10be:	ca 01       	movw	r24, r20
    10c0:	a0 01       	movw	r20, r0
    10c2:	11 24       	eor	r1, r1
    10c4:	ff 27       	eor	r31, r31
    10c6:	59 1b       	sub	r21, r25
    10c8:	99 f0       	breq	.+38     	; 0x10f0 <__addsf3x+0x60>
    10ca:	59 3f       	cpi	r21, 0xF9	; 249
    10cc:	50 f4       	brcc	.+20     	; 0x10e2 <__addsf3x+0x52>
    10ce:	50 3e       	cpi	r21, 0xE0	; 224
    10d0:	68 f1       	brcs	.+90     	; 0x112c <__addsf3x+0x9c>
    10d2:	1a 16       	cp	r1, r26
    10d4:	f0 40       	sbci	r31, 0x00	; 0
    10d6:	a2 2f       	mov	r26, r18
    10d8:	23 2f       	mov	r18, r19
    10da:	34 2f       	mov	r19, r20
    10dc:	44 27       	eor	r20, r20
    10de:	58 5f       	subi	r21, 0xF8	; 248
    10e0:	f3 cf       	rjmp	.-26     	; 0x10c8 <__addsf3x+0x38>
    10e2:	46 95       	lsr	r20
    10e4:	37 95       	ror	r19
    10e6:	27 95       	ror	r18
    10e8:	a7 95       	ror	r26
    10ea:	f0 40       	sbci	r31, 0x00	; 0
    10ec:	53 95       	inc	r21
    10ee:	c9 f7       	brne	.-14     	; 0x10e2 <__addsf3x+0x52>
    10f0:	7e f4       	brtc	.+30     	; 0x1110 <__addsf3x+0x80>
    10f2:	1f 16       	cp	r1, r31
    10f4:	ba 0b       	sbc	r27, r26
    10f6:	62 0b       	sbc	r22, r18
    10f8:	73 0b       	sbc	r23, r19
    10fa:	84 0b       	sbc	r24, r20
    10fc:	ba f0       	brmi	.+46     	; 0x112c <__addsf3x+0x9c>
    10fe:	91 50       	subi	r25, 0x01	; 1
    1100:	a1 f0       	breq	.+40     	; 0x112a <__addsf3x+0x9a>
    1102:	ff 0f       	add	r31, r31
    1104:	bb 1f       	adc	r27, r27
    1106:	66 1f       	adc	r22, r22
    1108:	77 1f       	adc	r23, r23
    110a:	88 1f       	adc	r24, r24
    110c:	c2 f7       	brpl	.-16     	; 0x10fe <__addsf3x+0x6e>
    110e:	0e c0       	rjmp	.+28     	; 0x112c <__addsf3x+0x9c>
    1110:	ba 0f       	add	r27, r26
    1112:	62 1f       	adc	r22, r18
    1114:	73 1f       	adc	r23, r19
    1116:	84 1f       	adc	r24, r20
    1118:	48 f4       	brcc	.+18     	; 0x112c <__addsf3x+0x9c>
    111a:	87 95       	ror	r24
    111c:	77 95       	ror	r23
    111e:	67 95       	ror	r22
    1120:	b7 95       	ror	r27
    1122:	f7 95       	ror	r31
    1124:	9e 3f       	cpi	r25, 0xFE	; 254
    1126:	08 f0       	brcs	.+2      	; 0x112a <__addsf3x+0x9a>
    1128:	b0 cf       	rjmp	.-160    	; 0x108a <__addsf3+0x28>
    112a:	93 95       	inc	r25
    112c:	88 0f       	add	r24, r24
    112e:	08 f0       	brcs	.+2      	; 0x1132 <__addsf3x+0xa2>
    1130:	99 27       	eor	r25, r25
    1132:	ee 0f       	add	r30, r30
    1134:	97 95       	ror	r25
    1136:	87 95       	ror	r24
    1138:	08 95       	ret

0000113a <__cmpsf2>:
    113a:	0e 94 87 09 	call	0x130e	; 0x130e <__fp_cmp>
    113e:	08 f4       	brcc	.+2      	; 0x1142 <__cmpsf2+0x8>
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	08 95       	ret

00001144 <__divsf3>:
    1144:	0e 94 b6 08 	call	0x116c	; 0x116c <__divsf3x>
    1148:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <__fp_round>
    114c:	0e 94 bb 09 	call	0x1376	; 0x1376 <__fp_pscB>
    1150:	58 f0       	brcs	.+22     	; 0x1168 <__divsf3+0x24>
    1152:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_pscA>
    1156:	40 f0       	brcs	.+16     	; 0x1168 <__divsf3+0x24>
    1158:	29 f4       	brne	.+10     	; 0x1164 <__divsf3+0x20>
    115a:	5f 3f       	cpi	r21, 0xFF	; 255
    115c:	29 f0       	breq	.+10     	; 0x1168 <__divsf3+0x24>
    115e:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_inf>
    1162:	51 11       	cpse	r21, r1
    1164:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_szero>
    1168:	0c 94 b1 09 	jmp	0x1362	; 0x1362 <__fp_nan>

0000116c <__divsf3x>:
    116c:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fp_split3>
    1170:	68 f3       	brcs	.-38     	; 0x114c <__divsf3+0x8>

00001172 <__divsf3_pse>:
    1172:	99 23       	and	r25, r25
    1174:	b1 f3       	breq	.-20     	; 0x1162 <__divsf3+0x1e>
    1176:	55 23       	and	r21, r21
    1178:	91 f3       	breq	.-28     	; 0x115e <__divsf3+0x1a>
    117a:	95 1b       	sub	r25, r21
    117c:	55 0b       	sbc	r21, r21
    117e:	bb 27       	eor	r27, r27
    1180:	aa 27       	eor	r26, r26
    1182:	62 17       	cp	r22, r18
    1184:	73 07       	cpc	r23, r19
    1186:	84 07       	cpc	r24, r20
    1188:	38 f0       	brcs	.+14     	; 0x1198 <__divsf3_pse+0x26>
    118a:	9f 5f       	subi	r25, 0xFF	; 255
    118c:	5f 4f       	sbci	r21, 0xFF	; 255
    118e:	22 0f       	add	r18, r18
    1190:	33 1f       	adc	r19, r19
    1192:	44 1f       	adc	r20, r20
    1194:	aa 1f       	adc	r26, r26
    1196:	a9 f3       	breq	.-22     	; 0x1182 <__divsf3_pse+0x10>
    1198:	35 d0       	rcall	.+106    	; 0x1204 <__divsf3_pse+0x92>
    119a:	0e 2e       	mov	r0, r30
    119c:	3a f0       	brmi	.+14     	; 0x11ac <__divsf3_pse+0x3a>
    119e:	e0 e8       	ldi	r30, 0x80	; 128
    11a0:	32 d0       	rcall	.+100    	; 0x1206 <__divsf3_pse+0x94>
    11a2:	91 50       	subi	r25, 0x01	; 1
    11a4:	50 40       	sbci	r21, 0x00	; 0
    11a6:	e6 95       	lsr	r30
    11a8:	00 1c       	adc	r0, r0
    11aa:	ca f7       	brpl	.-14     	; 0x119e <__divsf3_pse+0x2c>
    11ac:	2b d0       	rcall	.+86     	; 0x1204 <__divsf3_pse+0x92>
    11ae:	fe 2f       	mov	r31, r30
    11b0:	29 d0       	rcall	.+82     	; 0x1204 <__divsf3_pse+0x92>
    11b2:	66 0f       	add	r22, r22
    11b4:	77 1f       	adc	r23, r23
    11b6:	88 1f       	adc	r24, r24
    11b8:	bb 1f       	adc	r27, r27
    11ba:	26 17       	cp	r18, r22
    11bc:	37 07       	cpc	r19, r23
    11be:	48 07       	cpc	r20, r24
    11c0:	ab 07       	cpc	r26, r27
    11c2:	b0 e8       	ldi	r27, 0x80	; 128
    11c4:	09 f0       	breq	.+2      	; 0x11c8 <__divsf3_pse+0x56>
    11c6:	bb 0b       	sbc	r27, r27
    11c8:	80 2d       	mov	r24, r0
    11ca:	bf 01       	movw	r22, r30
    11cc:	ff 27       	eor	r31, r31
    11ce:	93 58       	subi	r25, 0x83	; 131
    11d0:	5f 4f       	sbci	r21, 0xFF	; 255
    11d2:	3a f0       	brmi	.+14     	; 0x11e2 <__divsf3_pse+0x70>
    11d4:	9e 3f       	cpi	r25, 0xFE	; 254
    11d6:	51 05       	cpc	r21, r1
    11d8:	78 f0       	brcs	.+30     	; 0x11f8 <__divsf3_pse+0x86>
    11da:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_inf>
    11de:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_szero>
    11e2:	5f 3f       	cpi	r21, 0xFF	; 255
    11e4:	e4 f3       	brlt	.-8      	; 0x11de <__divsf3_pse+0x6c>
    11e6:	98 3e       	cpi	r25, 0xE8	; 232
    11e8:	d4 f3       	brlt	.-12     	; 0x11de <__divsf3_pse+0x6c>
    11ea:	86 95       	lsr	r24
    11ec:	77 95       	ror	r23
    11ee:	67 95       	ror	r22
    11f0:	b7 95       	ror	r27
    11f2:	f7 95       	ror	r31
    11f4:	9f 5f       	subi	r25, 0xFF	; 255
    11f6:	c9 f7       	brne	.-14     	; 0x11ea <__divsf3_pse+0x78>
    11f8:	88 0f       	add	r24, r24
    11fa:	91 1d       	adc	r25, r1
    11fc:	96 95       	lsr	r25
    11fe:	87 95       	ror	r24
    1200:	97 f9       	bld	r25, 7
    1202:	08 95       	ret
    1204:	e1 e0       	ldi	r30, 0x01	; 1
    1206:	66 0f       	add	r22, r22
    1208:	77 1f       	adc	r23, r23
    120a:	88 1f       	adc	r24, r24
    120c:	bb 1f       	adc	r27, r27
    120e:	62 17       	cp	r22, r18
    1210:	73 07       	cpc	r23, r19
    1212:	84 07       	cpc	r24, r20
    1214:	ba 07       	cpc	r27, r26
    1216:	20 f0       	brcs	.+8      	; 0x1220 <__divsf3_pse+0xae>
    1218:	62 1b       	sub	r22, r18
    121a:	73 0b       	sbc	r23, r19
    121c:	84 0b       	sbc	r24, r20
    121e:	ba 0b       	sbc	r27, r26
    1220:	ee 1f       	adc	r30, r30
    1222:	88 f7       	brcc	.-30     	; 0x1206 <__divsf3_pse+0x94>
    1224:	e0 95       	com	r30
    1226:	08 95       	ret

00001228 <__fixsfsi>:
    1228:	0e 94 1b 09 	call	0x1236	; 0x1236 <__fixunssfsi>
    122c:	68 94       	set
    122e:	b1 11       	cpse	r27, r1
    1230:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_szero>
    1234:	08 95       	ret

00001236 <__fixunssfsi>:
    1236:	0e 94 db 09 	call	0x13b6	; 0x13b6 <__fp_splitA>
    123a:	88 f0       	brcs	.+34     	; 0x125e <__fixunssfsi+0x28>
    123c:	9f 57       	subi	r25, 0x7F	; 127
    123e:	98 f0       	brcs	.+38     	; 0x1266 <__fixunssfsi+0x30>
    1240:	b9 2f       	mov	r27, r25
    1242:	99 27       	eor	r25, r25
    1244:	b7 51       	subi	r27, 0x17	; 23
    1246:	b0 f0       	brcs	.+44     	; 0x1274 <__fixunssfsi+0x3e>
    1248:	e1 f0       	breq	.+56     	; 0x1282 <__fixunssfsi+0x4c>
    124a:	66 0f       	add	r22, r22
    124c:	77 1f       	adc	r23, r23
    124e:	88 1f       	adc	r24, r24
    1250:	99 1f       	adc	r25, r25
    1252:	1a f0       	brmi	.+6      	; 0x125a <__fixunssfsi+0x24>
    1254:	ba 95       	dec	r27
    1256:	c9 f7       	brne	.-14     	; 0x124a <__fixunssfsi+0x14>
    1258:	14 c0       	rjmp	.+40     	; 0x1282 <__fixunssfsi+0x4c>
    125a:	b1 30       	cpi	r27, 0x01	; 1
    125c:	91 f0       	breq	.+36     	; 0x1282 <__fixunssfsi+0x4c>
    125e:	0e 94 f5 09 	call	0x13ea	; 0x13ea <__fp_zero>
    1262:	b1 e0       	ldi	r27, 0x01	; 1
    1264:	08 95       	ret
    1266:	0c 94 f5 09 	jmp	0x13ea	; 0x13ea <__fp_zero>
    126a:	67 2f       	mov	r22, r23
    126c:	78 2f       	mov	r23, r24
    126e:	88 27       	eor	r24, r24
    1270:	b8 5f       	subi	r27, 0xF8	; 248
    1272:	39 f0       	breq	.+14     	; 0x1282 <__fixunssfsi+0x4c>
    1274:	b9 3f       	cpi	r27, 0xF9	; 249
    1276:	cc f3       	brlt	.-14     	; 0x126a <__fixunssfsi+0x34>
    1278:	86 95       	lsr	r24
    127a:	77 95       	ror	r23
    127c:	67 95       	ror	r22
    127e:	b3 95       	inc	r27
    1280:	d9 f7       	brne	.-10     	; 0x1278 <__fixunssfsi+0x42>
    1282:	3e f4       	brtc	.+14     	; 0x1292 <__fixunssfsi+0x5c>
    1284:	90 95       	com	r25
    1286:	80 95       	com	r24
    1288:	70 95       	com	r23
    128a:	61 95       	neg	r22
    128c:	7f 4f       	sbci	r23, 0xFF	; 255
    128e:	8f 4f       	sbci	r24, 0xFF	; 255
    1290:	9f 4f       	sbci	r25, 0xFF	; 255
    1292:	08 95       	ret

00001294 <__floatunsisf>:
    1294:	e8 94       	clt
    1296:	09 c0       	rjmp	.+18     	; 0x12aa <__floatsisf+0x12>

00001298 <__floatsisf>:
    1298:	97 fb       	bst	r25, 7
    129a:	3e f4       	brtc	.+14     	; 0x12aa <__floatsisf+0x12>
    129c:	90 95       	com	r25
    129e:	80 95       	com	r24
    12a0:	70 95       	com	r23
    12a2:	61 95       	neg	r22
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	8f 4f       	sbci	r24, 0xFF	; 255
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	99 23       	and	r25, r25
    12ac:	a9 f0       	breq	.+42     	; 0x12d8 <__floatsisf+0x40>
    12ae:	f9 2f       	mov	r31, r25
    12b0:	96 e9       	ldi	r25, 0x96	; 150
    12b2:	bb 27       	eor	r27, r27
    12b4:	93 95       	inc	r25
    12b6:	f6 95       	lsr	r31
    12b8:	87 95       	ror	r24
    12ba:	77 95       	ror	r23
    12bc:	67 95       	ror	r22
    12be:	b7 95       	ror	r27
    12c0:	f1 11       	cpse	r31, r1
    12c2:	f8 cf       	rjmp	.-16     	; 0x12b4 <__floatsisf+0x1c>
    12c4:	fa f4       	brpl	.+62     	; 0x1304 <__floatsisf+0x6c>
    12c6:	bb 0f       	add	r27, r27
    12c8:	11 f4       	brne	.+4      	; 0x12ce <__floatsisf+0x36>
    12ca:	60 ff       	sbrs	r22, 0
    12cc:	1b c0       	rjmp	.+54     	; 0x1304 <__floatsisf+0x6c>
    12ce:	6f 5f       	subi	r22, 0xFF	; 255
    12d0:	7f 4f       	sbci	r23, 0xFF	; 255
    12d2:	8f 4f       	sbci	r24, 0xFF	; 255
    12d4:	9f 4f       	sbci	r25, 0xFF	; 255
    12d6:	16 c0       	rjmp	.+44     	; 0x1304 <__floatsisf+0x6c>
    12d8:	88 23       	and	r24, r24
    12da:	11 f0       	breq	.+4      	; 0x12e0 <__floatsisf+0x48>
    12dc:	96 e9       	ldi	r25, 0x96	; 150
    12de:	11 c0       	rjmp	.+34     	; 0x1302 <__floatsisf+0x6a>
    12e0:	77 23       	and	r23, r23
    12e2:	21 f0       	breq	.+8      	; 0x12ec <__floatsisf+0x54>
    12e4:	9e e8       	ldi	r25, 0x8E	; 142
    12e6:	87 2f       	mov	r24, r23
    12e8:	76 2f       	mov	r23, r22
    12ea:	05 c0       	rjmp	.+10     	; 0x12f6 <__floatsisf+0x5e>
    12ec:	66 23       	and	r22, r22
    12ee:	71 f0       	breq	.+28     	; 0x130c <__floatsisf+0x74>
    12f0:	96 e8       	ldi	r25, 0x86	; 134
    12f2:	86 2f       	mov	r24, r22
    12f4:	70 e0       	ldi	r23, 0x00	; 0
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	2a f0       	brmi	.+10     	; 0x1304 <__floatsisf+0x6c>
    12fa:	9a 95       	dec	r25
    12fc:	66 0f       	add	r22, r22
    12fe:	77 1f       	adc	r23, r23
    1300:	88 1f       	adc	r24, r24
    1302:	da f7       	brpl	.-10     	; 0x12fa <__floatsisf+0x62>
    1304:	88 0f       	add	r24, r24
    1306:	96 95       	lsr	r25
    1308:	87 95       	ror	r24
    130a:	97 f9       	bld	r25, 7
    130c:	08 95       	ret

0000130e <__fp_cmp>:
    130e:	99 0f       	add	r25, r25
    1310:	00 08       	sbc	r0, r0
    1312:	55 0f       	add	r21, r21
    1314:	aa 0b       	sbc	r26, r26
    1316:	e0 e8       	ldi	r30, 0x80	; 128
    1318:	fe ef       	ldi	r31, 0xFE	; 254
    131a:	16 16       	cp	r1, r22
    131c:	17 06       	cpc	r1, r23
    131e:	e8 07       	cpc	r30, r24
    1320:	f9 07       	cpc	r31, r25
    1322:	c0 f0       	brcs	.+48     	; 0x1354 <__fp_cmp+0x46>
    1324:	12 16       	cp	r1, r18
    1326:	13 06       	cpc	r1, r19
    1328:	e4 07       	cpc	r30, r20
    132a:	f5 07       	cpc	r31, r21
    132c:	98 f0       	brcs	.+38     	; 0x1354 <__fp_cmp+0x46>
    132e:	62 1b       	sub	r22, r18
    1330:	73 0b       	sbc	r23, r19
    1332:	84 0b       	sbc	r24, r20
    1334:	95 0b       	sbc	r25, r21
    1336:	39 f4       	brne	.+14     	; 0x1346 <__fp_cmp+0x38>
    1338:	0a 26       	eor	r0, r26
    133a:	61 f0       	breq	.+24     	; 0x1354 <__fp_cmp+0x46>
    133c:	23 2b       	or	r18, r19
    133e:	24 2b       	or	r18, r20
    1340:	25 2b       	or	r18, r21
    1342:	21 f4       	brne	.+8      	; 0x134c <__fp_cmp+0x3e>
    1344:	08 95       	ret
    1346:	0a 26       	eor	r0, r26
    1348:	09 f4       	brne	.+2      	; 0x134c <__fp_cmp+0x3e>
    134a:	a1 40       	sbci	r26, 0x01	; 1
    134c:	a6 95       	lsr	r26
    134e:	8f ef       	ldi	r24, 0xFF	; 255
    1350:	81 1d       	adc	r24, r1
    1352:	81 1d       	adc	r24, r1
    1354:	08 95       	ret

00001356 <__fp_inf>:
    1356:	97 f9       	bld	r25, 7
    1358:	9f 67       	ori	r25, 0x7F	; 127
    135a:	80 e8       	ldi	r24, 0x80	; 128
    135c:	70 e0       	ldi	r23, 0x00	; 0
    135e:	60 e0       	ldi	r22, 0x00	; 0
    1360:	08 95       	ret

00001362 <__fp_nan>:
    1362:	9f ef       	ldi	r25, 0xFF	; 255
    1364:	80 ec       	ldi	r24, 0xC0	; 192
    1366:	08 95       	ret

00001368 <__fp_pscA>:
    1368:	00 24       	eor	r0, r0
    136a:	0a 94       	dec	r0
    136c:	16 16       	cp	r1, r22
    136e:	17 06       	cpc	r1, r23
    1370:	18 06       	cpc	r1, r24
    1372:	09 06       	cpc	r0, r25
    1374:	08 95       	ret

00001376 <__fp_pscB>:
    1376:	00 24       	eor	r0, r0
    1378:	0a 94       	dec	r0
    137a:	12 16       	cp	r1, r18
    137c:	13 06       	cpc	r1, r19
    137e:	14 06       	cpc	r1, r20
    1380:	05 06       	cpc	r0, r21
    1382:	08 95       	ret

00001384 <__fp_round>:
    1384:	09 2e       	mov	r0, r25
    1386:	03 94       	inc	r0
    1388:	00 0c       	add	r0, r0
    138a:	11 f4       	brne	.+4      	; 0x1390 <__fp_round+0xc>
    138c:	88 23       	and	r24, r24
    138e:	52 f0       	brmi	.+20     	; 0x13a4 <__fp_round+0x20>
    1390:	bb 0f       	add	r27, r27
    1392:	40 f4       	brcc	.+16     	; 0x13a4 <__fp_round+0x20>
    1394:	bf 2b       	or	r27, r31
    1396:	11 f4       	brne	.+4      	; 0x139c <__fp_round+0x18>
    1398:	60 ff       	sbrs	r22, 0
    139a:	04 c0       	rjmp	.+8      	; 0x13a4 <__fp_round+0x20>
    139c:	6f 5f       	subi	r22, 0xFF	; 255
    139e:	7f 4f       	sbci	r23, 0xFF	; 255
    13a0:	8f 4f       	sbci	r24, 0xFF	; 255
    13a2:	9f 4f       	sbci	r25, 0xFF	; 255
    13a4:	08 95       	ret

000013a6 <__fp_split3>:
    13a6:	57 fd       	sbrc	r21, 7
    13a8:	90 58       	subi	r25, 0x80	; 128
    13aa:	44 0f       	add	r20, r20
    13ac:	55 1f       	adc	r21, r21
    13ae:	59 f0       	breq	.+22     	; 0x13c6 <__fp_splitA+0x10>
    13b0:	5f 3f       	cpi	r21, 0xFF	; 255
    13b2:	71 f0       	breq	.+28     	; 0x13d0 <__fp_splitA+0x1a>
    13b4:	47 95       	ror	r20

000013b6 <__fp_splitA>:
    13b6:	88 0f       	add	r24, r24
    13b8:	97 fb       	bst	r25, 7
    13ba:	99 1f       	adc	r25, r25
    13bc:	61 f0       	breq	.+24     	; 0x13d6 <__fp_splitA+0x20>
    13be:	9f 3f       	cpi	r25, 0xFF	; 255
    13c0:	79 f0       	breq	.+30     	; 0x13e0 <__fp_splitA+0x2a>
    13c2:	87 95       	ror	r24
    13c4:	08 95       	ret
    13c6:	12 16       	cp	r1, r18
    13c8:	13 06       	cpc	r1, r19
    13ca:	14 06       	cpc	r1, r20
    13cc:	55 1f       	adc	r21, r21
    13ce:	f2 cf       	rjmp	.-28     	; 0x13b4 <__fp_split3+0xe>
    13d0:	46 95       	lsr	r20
    13d2:	f1 df       	rcall	.-30     	; 0x13b6 <__fp_splitA>
    13d4:	08 c0       	rjmp	.+16     	; 0x13e6 <__fp_splitA+0x30>
    13d6:	16 16       	cp	r1, r22
    13d8:	17 06       	cpc	r1, r23
    13da:	18 06       	cpc	r1, r24
    13dc:	99 1f       	adc	r25, r25
    13de:	f1 cf       	rjmp	.-30     	; 0x13c2 <__fp_splitA+0xc>
    13e0:	86 95       	lsr	r24
    13e2:	71 05       	cpc	r23, r1
    13e4:	61 05       	cpc	r22, r1
    13e6:	08 94       	sec
    13e8:	08 95       	ret

000013ea <__fp_zero>:
    13ea:	e8 94       	clt

000013ec <__fp_szero>:
    13ec:	bb 27       	eor	r27, r27
    13ee:	66 27       	eor	r22, r22
    13f0:	77 27       	eor	r23, r23
    13f2:	cb 01       	movw	r24, r22
    13f4:	97 f9       	bld	r25, 7
    13f6:	08 95       	ret

000013f8 <__gesf2>:
    13f8:	0e 94 87 09 	call	0x130e	; 0x130e <__fp_cmp>
    13fc:	08 f4       	brcc	.+2      	; 0x1400 <__gesf2+0x8>
    13fe:	8f ef       	ldi	r24, 0xFF	; 255
    1400:	08 95       	ret

00001402 <__mulsf3>:
    1402:	0e 94 14 0a 	call	0x1428	; 0x1428 <__mulsf3x>
    1406:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <__fp_round>
    140a:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_pscA>
    140e:	38 f0       	brcs	.+14     	; 0x141e <__mulsf3+0x1c>
    1410:	0e 94 bb 09 	call	0x1376	; 0x1376 <__fp_pscB>
    1414:	20 f0       	brcs	.+8      	; 0x141e <__mulsf3+0x1c>
    1416:	95 23       	and	r25, r21
    1418:	11 f0       	breq	.+4      	; 0x141e <__mulsf3+0x1c>
    141a:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_inf>
    141e:	0c 94 b1 09 	jmp	0x1362	; 0x1362 <__fp_nan>
    1422:	11 24       	eor	r1, r1
    1424:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_szero>

00001428 <__mulsf3x>:
    1428:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fp_split3>
    142c:	70 f3       	brcs	.-36     	; 0x140a <__mulsf3+0x8>

0000142e <__mulsf3_pse>:
    142e:	95 9f       	mul	r25, r21
    1430:	c1 f3       	breq	.-16     	; 0x1422 <__mulsf3+0x20>
    1432:	95 0f       	add	r25, r21
    1434:	50 e0       	ldi	r21, 0x00	; 0
    1436:	55 1f       	adc	r21, r21
    1438:	62 9f       	mul	r22, r18
    143a:	f0 01       	movw	r30, r0
    143c:	72 9f       	mul	r23, r18
    143e:	bb 27       	eor	r27, r27
    1440:	f0 0d       	add	r31, r0
    1442:	b1 1d       	adc	r27, r1
    1444:	63 9f       	mul	r22, r19
    1446:	aa 27       	eor	r26, r26
    1448:	f0 0d       	add	r31, r0
    144a:	b1 1d       	adc	r27, r1
    144c:	aa 1f       	adc	r26, r26
    144e:	64 9f       	mul	r22, r20
    1450:	66 27       	eor	r22, r22
    1452:	b0 0d       	add	r27, r0
    1454:	a1 1d       	adc	r26, r1
    1456:	66 1f       	adc	r22, r22
    1458:	82 9f       	mul	r24, r18
    145a:	22 27       	eor	r18, r18
    145c:	b0 0d       	add	r27, r0
    145e:	a1 1d       	adc	r26, r1
    1460:	62 1f       	adc	r22, r18
    1462:	73 9f       	mul	r23, r19
    1464:	b0 0d       	add	r27, r0
    1466:	a1 1d       	adc	r26, r1
    1468:	62 1f       	adc	r22, r18
    146a:	83 9f       	mul	r24, r19
    146c:	a0 0d       	add	r26, r0
    146e:	61 1d       	adc	r22, r1
    1470:	22 1f       	adc	r18, r18
    1472:	74 9f       	mul	r23, r20
    1474:	33 27       	eor	r19, r19
    1476:	a0 0d       	add	r26, r0
    1478:	61 1d       	adc	r22, r1
    147a:	23 1f       	adc	r18, r19
    147c:	84 9f       	mul	r24, r20
    147e:	60 0d       	add	r22, r0
    1480:	21 1d       	adc	r18, r1
    1482:	82 2f       	mov	r24, r18
    1484:	76 2f       	mov	r23, r22
    1486:	6a 2f       	mov	r22, r26
    1488:	11 24       	eor	r1, r1
    148a:	9f 57       	subi	r25, 0x7F	; 127
    148c:	50 40       	sbci	r21, 0x00	; 0
    148e:	9a f0       	brmi	.+38     	; 0x14b6 <__mulsf3_pse+0x88>
    1490:	f1 f0       	breq	.+60     	; 0x14ce <__mulsf3_pse+0xa0>
    1492:	88 23       	and	r24, r24
    1494:	4a f0       	brmi	.+18     	; 0x14a8 <__mulsf3_pse+0x7a>
    1496:	ee 0f       	add	r30, r30
    1498:	ff 1f       	adc	r31, r31
    149a:	bb 1f       	adc	r27, r27
    149c:	66 1f       	adc	r22, r22
    149e:	77 1f       	adc	r23, r23
    14a0:	88 1f       	adc	r24, r24
    14a2:	91 50       	subi	r25, 0x01	; 1
    14a4:	50 40       	sbci	r21, 0x00	; 0
    14a6:	a9 f7       	brne	.-22     	; 0x1492 <__mulsf3_pse+0x64>
    14a8:	9e 3f       	cpi	r25, 0xFE	; 254
    14aa:	51 05       	cpc	r21, r1
    14ac:	80 f0       	brcs	.+32     	; 0x14ce <__mulsf3_pse+0xa0>
    14ae:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_inf>
    14b2:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_szero>
    14b6:	5f 3f       	cpi	r21, 0xFF	; 255
    14b8:	e4 f3       	brlt	.-8      	; 0x14b2 <__mulsf3_pse+0x84>
    14ba:	98 3e       	cpi	r25, 0xE8	; 232
    14bc:	d4 f3       	brlt	.-12     	; 0x14b2 <__mulsf3_pse+0x84>
    14be:	86 95       	lsr	r24
    14c0:	77 95       	ror	r23
    14c2:	67 95       	ror	r22
    14c4:	b7 95       	ror	r27
    14c6:	f7 95       	ror	r31
    14c8:	e7 95       	ror	r30
    14ca:	9f 5f       	subi	r25, 0xFF	; 255
    14cc:	c1 f7       	brne	.-16     	; 0x14be <__mulsf3_pse+0x90>
    14ce:	fe 2b       	or	r31, r30
    14d0:	88 0f       	add	r24, r24
    14d2:	91 1d       	adc	r25, r1
    14d4:	96 95       	lsr	r25
    14d6:	87 95       	ror	r24
    14d8:	97 f9       	bld	r25, 7
    14da:	08 95       	ret

000014dc <__udivmodsi4>:
    14dc:	a1 e2       	ldi	r26, 0x21	; 33
    14de:	1a 2e       	mov	r1, r26
    14e0:	aa 1b       	sub	r26, r26
    14e2:	bb 1b       	sub	r27, r27
    14e4:	fd 01       	movw	r30, r26
    14e6:	0d c0       	rjmp	.+26     	; 0x1502 <__udivmodsi4_ep>

000014e8 <__udivmodsi4_loop>:
    14e8:	aa 1f       	adc	r26, r26
    14ea:	bb 1f       	adc	r27, r27
    14ec:	ee 1f       	adc	r30, r30
    14ee:	ff 1f       	adc	r31, r31
    14f0:	a2 17       	cp	r26, r18
    14f2:	b3 07       	cpc	r27, r19
    14f4:	e4 07       	cpc	r30, r20
    14f6:	f5 07       	cpc	r31, r21
    14f8:	20 f0       	brcs	.+8      	; 0x1502 <__udivmodsi4_ep>
    14fa:	a2 1b       	sub	r26, r18
    14fc:	b3 0b       	sbc	r27, r19
    14fe:	e4 0b       	sbc	r30, r20
    1500:	f5 0b       	sbc	r31, r21

00001502 <__udivmodsi4_ep>:
    1502:	66 1f       	adc	r22, r22
    1504:	77 1f       	adc	r23, r23
    1506:	88 1f       	adc	r24, r24
    1508:	99 1f       	adc	r25, r25
    150a:	1a 94       	dec	r1
    150c:	69 f7       	brne	.-38     	; 0x14e8 <__udivmodsi4_loop>
    150e:	60 95       	com	r22
    1510:	70 95       	com	r23
    1512:	80 95       	com	r24
    1514:	90 95       	com	r25
    1516:	9b 01       	movw	r18, r22
    1518:	ac 01       	movw	r20, r24
    151a:	bd 01       	movw	r22, r26
    151c:	cf 01       	movw	r24, r30
    151e:	08 95       	ret

00001520 <dtostrf>:
    1520:	ef 92       	push	r14
    1522:	0f 93       	push	r16
    1524:	1f 93       	push	r17
    1526:	cf 93       	push	r28
    1528:	df 93       	push	r29
    152a:	e8 01       	movw	r28, r16
    152c:	47 fd       	sbrc	r20, 7
    152e:	02 c0       	rjmp	.+4      	; 0x1534 <dtostrf+0x14>
    1530:	34 e0       	ldi	r19, 0x04	; 4
    1532:	01 c0       	rjmp	.+2      	; 0x1536 <dtostrf+0x16>
    1534:	34 e1       	ldi	r19, 0x14	; 20
    1536:	04 2e       	mov	r0, r20
    1538:	00 0c       	add	r0, r0
    153a:	55 0b       	sbc	r21, r21
    153c:	57 ff       	sbrs	r21, 7
    153e:	03 c0       	rjmp	.+6      	; 0x1546 <dtostrf+0x26>
    1540:	51 95       	neg	r21
    1542:	41 95       	neg	r20
    1544:	51 09       	sbc	r21, r1
    1546:	e3 2e       	mov	r14, r19
    1548:	02 2f       	mov	r16, r18
    154a:	24 2f       	mov	r18, r20
    154c:	ae 01       	movw	r20, r28
    154e:	0e 94 bf 0a 	call	0x157e	; 0x157e <dtoa_prf>
    1552:	ce 01       	movw	r24, r28
    1554:	df 91       	pop	r29
    1556:	cf 91       	pop	r28
    1558:	1f 91       	pop	r17
    155a:	0f 91       	pop	r16
    155c:	ef 90       	pop	r14
    155e:	08 95       	ret

00001560 <atof>:
    1560:	66 27       	eor	r22, r22
    1562:	77 27       	eor	r23, r23
    1564:	0c 94 19 0c 	jmp	0x1832	; 0x1832 <strtod>

00001568 <strcat>:
    1568:	fb 01       	movw	r30, r22
    156a:	dc 01       	movw	r26, r24
    156c:	0d 90       	ld	r0, X+
    156e:	00 20       	and	r0, r0
    1570:	e9 f7       	brne	.-6      	; 0x156c <strcat+0x4>
    1572:	11 97       	sbiw	r26, 0x01	; 1
    1574:	01 90       	ld	r0, Z+
    1576:	0d 92       	st	X+, r0
    1578:	00 20       	and	r0, r0
    157a:	e1 f7       	brne	.-8      	; 0x1574 <strcat+0xc>
    157c:	08 95       	ret

0000157e <dtoa_prf>:
    157e:	a9 e0       	ldi	r26, 0x09	; 9
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	e5 ec       	ldi	r30, 0xC5	; 197
    1584:	fa e0       	ldi	r31, 0x0A	; 10
    1586:	0c 94 74 0e 	jmp	0x1ce8	; 0x1ce8 <__prologue_saves__+0xc>
    158a:	6a 01       	movw	r12, r20
    158c:	12 2f       	mov	r17, r18
    158e:	b0 2e       	mov	r11, r16
    1590:	2b e3       	ldi	r18, 0x3B	; 59
    1592:	20 17       	cp	r18, r16
    1594:	20 f0       	brcs	.+8      	; 0x159e <dtoa_prf+0x20>
    1596:	ff 24       	eor	r15, r15
    1598:	f3 94       	inc	r15
    159a:	f0 0e       	add	r15, r16
    159c:	02 c0       	rjmp	.+4      	; 0x15a2 <dtoa_prf+0x24>
    159e:	2c e3       	ldi	r18, 0x3C	; 60
    15a0:	f2 2e       	mov	r15, r18
    15a2:	0f 2d       	mov	r16, r15
    15a4:	27 e0       	ldi	r18, 0x07	; 7
    15a6:	ae 01       	movw	r20, r28
    15a8:	4f 5f       	subi	r20, 0xFF	; 255
    15aa:	5f 4f       	sbci	r21, 0xFF	; 255
    15ac:	0e 94 67 0d 	call	0x1ace	; 0x1ace <__ftoa_engine>
    15b0:	bc 01       	movw	r22, r24
    15b2:	49 81       	ldd	r20, Y+1	; 0x01
    15b4:	84 2f       	mov	r24, r20
    15b6:	89 70       	andi	r24, 0x09	; 9
    15b8:	81 30       	cpi	r24, 0x01	; 1
    15ba:	31 f0       	breq	.+12     	; 0x15c8 <dtoa_prf+0x4a>
    15bc:	e1 fc       	sbrc	r14, 1
    15be:	06 c0       	rjmp	.+12     	; 0x15cc <dtoa_prf+0x4e>
    15c0:	e0 fe       	sbrs	r14, 0
    15c2:	06 c0       	rjmp	.+12     	; 0x15d0 <dtoa_prf+0x52>
    15c4:	90 e2       	ldi	r25, 0x20	; 32
    15c6:	05 c0       	rjmp	.+10     	; 0x15d2 <dtoa_prf+0x54>
    15c8:	9d e2       	ldi	r25, 0x2D	; 45
    15ca:	03 c0       	rjmp	.+6      	; 0x15d2 <dtoa_prf+0x54>
    15cc:	9b e2       	ldi	r25, 0x2B	; 43
    15ce:	01 c0       	rjmp	.+2      	; 0x15d2 <dtoa_prf+0x54>
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	5e 2d       	mov	r21, r14
    15d4:	50 71       	andi	r21, 0x10	; 16
    15d6:	43 ff       	sbrs	r20, 3
    15d8:	3c c0       	rjmp	.+120    	; 0x1652 <dtoa_prf+0xd4>
    15da:	91 11       	cpse	r25, r1
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <dtoa_prf+0x64>
    15de:	83 e0       	ldi	r24, 0x03	; 3
    15e0:	01 c0       	rjmp	.+2      	; 0x15e4 <dtoa_prf+0x66>
    15e2:	84 e0       	ldi	r24, 0x04	; 4
    15e4:	81 17       	cp	r24, r17
    15e6:	18 f4       	brcc	.+6      	; 0x15ee <dtoa_prf+0x70>
    15e8:	21 2f       	mov	r18, r17
    15ea:	28 1b       	sub	r18, r24
    15ec:	01 c0       	rjmp	.+2      	; 0x15f0 <dtoa_prf+0x72>
    15ee:	20 e0       	ldi	r18, 0x00	; 0
    15f0:	51 11       	cpse	r21, r1
    15f2:	0b c0       	rjmp	.+22     	; 0x160a <dtoa_prf+0x8c>
    15f4:	f6 01       	movw	r30, r12
    15f6:	82 2f       	mov	r24, r18
    15f8:	30 e2       	ldi	r19, 0x20	; 32
    15fa:	88 23       	and	r24, r24
    15fc:	19 f0       	breq	.+6      	; 0x1604 <dtoa_prf+0x86>
    15fe:	31 93       	st	Z+, r19
    1600:	81 50       	subi	r24, 0x01	; 1
    1602:	fb cf       	rjmp	.-10     	; 0x15fa <dtoa_prf+0x7c>
    1604:	c2 0e       	add	r12, r18
    1606:	d1 1c       	adc	r13, r1
    1608:	20 e0       	ldi	r18, 0x00	; 0
    160a:	99 23       	and	r25, r25
    160c:	29 f0       	breq	.+10     	; 0x1618 <dtoa_prf+0x9a>
    160e:	d6 01       	movw	r26, r12
    1610:	9c 93       	st	X, r25
    1612:	f6 01       	movw	r30, r12
    1614:	31 96       	adiw	r30, 0x01	; 1
    1616:	6f 01       	movw	r12, r30
    1618:	c6 01       	movw	r24, r12
    161a:	03 96       	adiw	r24, 0x03	; 3
    161c:	e2 fe       	sbrs	r14, 2
    161e:	0a c0       	rjmp	.+20     	; 0x1634 <dtoa_prf+0xb6>
    1620:	3e e4       	ldi	r19, 0x4E	; 78
    1622:	d6 01       	movw	r26, r12
    1624:	3c 93       	st	X, r19
    1626:	41 e4       	ldi	r20, 0x41	; 65
    1628:	11 96       	adiw	r26, 0x01	; 1
    162a:	4c 93       	st	X, r20
    162c:	11 97       	sbiw	r26, 0x01	; 1
    162e:	12 96       	adiw	r26, 0x02	; 2
    1630:	3c 93       	st	X, r19
    1632:	06 c0       	rjmp	.+12     	; 0x1640 <dtoa_prf+0xc2>
    1634:	3e e6       	ldi	r19, 0x6E	; 110
    1636:	f6 01       	movw	r30, r12
    1638:	30 83       	st	Z, r19
    163a:	41 e6       	ldi	r20, 0x61	; 97
    163c:	41 83       	std	Z+1, r20	; 0x01
    163e:	32 83       	std	Z+2, r19	; 0x02
    1640:	fc 01       	movw	r30, r24
    1642:	32 2f       	mov	r19, r18
    1644:	40 e2       	ldi	r20, 0x20	; 32
    1646:	33 23       	and	r19, r19
    1648:	09 f4       	brne	.+2      	; 0x164c <dtoa_prf+0xce>
    164a:	42 c0       	rjmp	.+132    	; 0x16d0 <dtoa_prf+0x152>
    164c:	41 93       	st	Z+, r20
    164e:	31 50       	subi	r19, 0x01	; 1
    1650:	fa cf       	rjmp	.-12     	; 0x1646 <dtoa_prf+0xc8>
    1652:	42 ff       	sbrs	r20, 2
    1654:	44 c0       	rjmp	.+136    	; 0x16de <dtoa_prf+0x160>
    1656:	91 11       	cpse	r25, r1
    1658:	02 c0       	rjmp	.+4      	; 0x165e <dtoa_prf+0xe0>
    165a:	83 e0       	ldi	r24, 0x03	; 3
    165c:	01 c0       	rjmp	.+2      	; 0x1660 <dtoa_prf+0xe2>
    165e:	84 e0       	ldi	r24, 0x04	; 4
    1660:	81 17       	cp	r24, r17
    1662:	18 f4       	brcc	.+6      	; 0x166a <dtoa_prf+0xec>
    1664:	21 2f       	mov	r18, r17
    1666:	28 1b       	sub	r18, r24
    1668:	01 c0       	rjmp	.+2      	; 0x166c <dtoa_prf+0xee>
    166a:	20 e0       	ldi	r18, 0x00	; 0
    166c:	51 11       	cpse	r21, r1
    166e:	0b c0       	rjmp	.+22     	; 0x1686 <dtoa_prf+0x108>
    1670:	f6 01       	movw	r30, r12
    1672:	82 2f       	mov	r24, r18
    1674:	30 e2       	ldi	r19, 0x20	; 32
    1676:	88 23       	and	r24, r24
    1678:	19 f0       	breq	.+6      	; 0x1680 <dtoa_prf+0x102>
    167a:	31 93       	st	Z+, r19
    167c:	81 50       	subi	r24, 0x01	; 1
    167e:	fb cf       	rjmp	.-10     	; 0x1676 <dtoa_prf+0xf8>
    1680:	c2 0e       	add	r12, r18
    1682:	d1 1c       	adc	r13, r1
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	99 23       	and	r25, r25
    1688:	29 f0       	breq	.+10     	; 0x1694 <dtoa_prf+0x116>
    168a:	d6 01       	movw	r26, r12
    168c:	9c 93       	st	X, r25
    168e:	f6 01       	movw	r30, r12
    1690:	31 96       	adiw	r30, 0x01	; 1
    1692:	6f 01       	movw	r12, r30
    1694:	c6 01       	movw	r24, r12
    1696:	03 96       	adiw	r24, 0x03	; 3
    1698:	e2 fe       	sbrs	r14, 2
    169a:	0b c0       	rjmp	.+22     	; 0x16b2 <dtoa_prf+0x134>
    169c:	39 e4       	ldi	r19, 0x49	; 73
    169e:	d6 01       	movw	r26, r12
    16a0:	3c 93       	st	X, r19
    16a2:	3e e4       	ldi	r19, 0x4E	; 78
    16a4:	11 96       	adiw	r26, 0x01	; 1
    16a6:	3c 93       	st	X, r19
    16a8:	11 97       	sbiw	r26, 0x01	; 1
    16aa:	36 e4       	ldi	r19, 0x46	; 70
    16ac:	12 96       	adiw	r26, 0x02	; 2
    16ae:	3c 93       	st	X, r19
    16b0:	07 c0       	rjmp	.+14     	; 0x16c0 <dtoa_prf+0x142>
    16b2:	39 e6       	ldi	r19, 0x69	; 105
    16b4:	f6 01       	movw	r30, r12
    16b6:	30 83       	st	Z, r19
    16b8:	3e e6       	ldi	r19, 0x6E	; 110
    16ba:	31 83       	std	Z+1, r19	; 0x01
    16bc:	36 e6       	ldi	r19, 0x66	; 102
    16be:	32 83       	std	Z+2, r19	; 0x02
    16c0:	fc 01       	movw	r30, r24
    16c2:	32 2f       	mov	r19, r18
    16c4:	40 e2       	ldi	r20, 0x20	; 32
    16c6:	33 23       	and	r19, r19
    16c8:	19 f0       	breq	.+6      	; 0x16d0 <dtoa_prf+0x152>
    16ca:	41 93       	st	Z+, r20
    16cc:	31 50       	subi	r19, 0x01	; 1
    16ce:	fb cf       	rjmp	.-10     	; 0x16c6 <dtoa_prf+0x148>
    16d0:	fc 01       	movw	r30, r24
    16d2:	e2 0f       	add	r30, r18
    16d4:	f1 1d       	adc	r31, r1
    16d6:	10 82       	st	Z, r1
    16d8:	8e ef       	ldi	r24, 0xFE	; 254
    16da:	9f ef       	ldi	r25, 0xFF	; 255
    16dc:	a6 c0       	rjmp	.+332    	; 0x182a <dtoa_prf+0x2ac>
    16de:	21 e0       	ldi	r18, 0x01	; 1
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	91 11       	cpse	r25, r1
    16e4:	02 c0       	rjmp	.+4      	; 0x16ea <dtoa_prf+0x16c>
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	16 16       	cp	r1, r22
    16ec:	17 06       	cpc	r1, r23
    16ee:	1c f4       	brge	.+6      	; 0x16f6 <dtoa_prf+0x178>
    16f0:	fb 01       	movw	r30, r22
    16f2:	31 96       	adiw	r30, 0x01	; 1
    16f4:	02 c0       	rjmp	.+4      	; 0x16fa <dtoa_prf+0x17c>
    16f6:	e1 e0       	ldi	r30, 0x01	; 1
    16f8:	f0 e0       	ldi	r31, 0x00	; 0
    16fa:	2e 0f       	add	r18, r30
    16fc:	3f 1f       	adc	r19, r31
    16fe:	bb 20       	and	r11, r11
    1700:	21 f0       	breq	.+8      	; 0x170a <dtoa_prf+0x18c>
    1702:	eb 2d       	mov	r30, r11
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	31 96       	adiw	r30, 0x01	; 1
    1708:	02 c0       	rjmp	.+4      	; 0x170e <dtoa_prf+0x190>
    170a:	e0 e0       	ldi	r30, 0x00	; 0
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	2e 0f       	add	r18, r30
    1710:	3f 1f       	adc	r19, r31
    1712:	e1 2f       	mov	r30, r17
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	2e 17       	cp	r18, r30
    1718:	3f 07       	cpc	r19, r31
    171a:	1c f4       	brge	.+6      	; 0x1722 <dtoa_prf+0x1a4>
    171c:	12 1b       	sub	r17, r18
    171e:	21 2f       	mov	r18, r17
    1720:	01 c0       	rjmp	.+2      	; 0x1724 <dtoa_prf+0x1a6>
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	8e 2d       	mov	r24, r14
    1726:	88 71       	andi	r24, 0x18	; 24
    1728:	59 f4       	brne	.+22     	; 0x1740 <dtoa_prf+0x1c2>
    172a:	f6 01       	movw	r30, r12
    172c:	82 2f       	mov	r24, r18
    172e:	30 e2       	ldi	r19, 0x20	; 32
    1730:	88 23       	and	r24, r24
    1732:	19 f0       	breq	.+6      	; 0x173a <dtoa_prf+0x1bc>
    1734:	31 93       	st	Z+, r19
    1736:	81 50       	subi	r24, 0x01	; 1
    1738:	fb cf       	rjmp	.-10     	; 0x1730 <dtoa_prf+0x1b2>
    173a:	c2 0e       	add	r12, r18
    173c:	d1 1c       	adc	r13, r1
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	99 23       	and	r25, r25
    1742:	29 f0       	breq	.+10     	; 0x174e <dtoa_prf+0x1d0>
    1744:	d6 01       	movw	r26, r12
    1746:	9c 93       	st	X, r25
    1748:	f6 01       	movw	r30, r12
    174a:	31 96       	adiw	r30, 0x01	; 1
    174c:	6f 01       	movw	r12, r30
    174e:	51 11       	cpse	r21, r1
    1750:	0b c0       	rjmp	.+22     	; 0x1768 <dtoa_prf+0x1ea>
    1752:	f6 01       	movw	r30, r12
    1754:	82 2f       	mov	r24, r18
    1756:	90 e3       	ldi	r25, 0x30	; 48
    1758:	88 23       	and	r24, r24
    175a:	19 f0       	breq	.+6      	; 0x1762 <dtoa_prf+0x1e4>
    175c:	91 93       	st	Z+, r25
    175e:	81 50       	subi	r24, 0x01	; 1
    1760:	fb cf       	rjmp	.-10     	; 0x1758 <dtoa_prf+0x1da>
    1762:	c2 0e       	add	r12, r18
    1764:	d1 1c       	adc	r13, r1
    1766:	20 e0       	ldi	r18, 0x00	; 0
    1768:	0f 2d       	mov	r16, r15
    176a:	06 0f       	add	r16, r22
    176c:	9a 81       	ldd	r25, Y+2	; 0x02
    176e:	34 2f       	mov	r19, r20
    1770:	30 71       	andi	r19, 0x10	; 16
    1772:	44 ff       	sbrs	r20, 4
    1774:	03 c0       	rjmp	.+6      	; 0x177c <dtoa_prf+0x1fe>
    1776:	91 33       	cpi	r25, 0x31	; 49
    1778:	09 f4       	brne	.+2      	; 0x177c <dtoa_prf+0x1fe>
    177a:	01 50       	subi	r16, 0x01	; 1
    177c:	10 16       	cp	r1, r16
    177e:	24 f4       	brge	.+8      	; 0x1788 <dtoa_prf+0x20a>
    1780:	09 30       	cpi	r16, 0x09	; 9
    1782:	18 f0       	brcs	.+6      	; 0x178a <dtoa_prf+0x20c>
    1784:	08 e0       	ldi	r16, 0x08	; 8
    1786:	01 c0       	rjmp	.+2      	; 0x178a <dtoa_prf+0x20c>
    1788:	01 e0       	ldi	r16, 0x01	; 1
    178a:	ab 01       	movw	r20, r22
    178c:	77 ff       	sbrs	r23, 7
    178e:	02 c0       	rjmp	.+4      	; 0x1794 <dtoa_prf+0x216>
    1790:	40 e0       	ldi	r20, 0x00	; 0
    1792:	50 e0       	ldi	r21, 0x00	; 0
    1794:	fb 01       	movw	r30, r22
    1796:	e4 1b       	sub	r30, r20
    1798:	f5 0b       	sbc	r31, r21
    179a:	a1 e0       	ldi	r26, 0x01	; 1
    179c:	b0 e0       	ldi	r27, 0x00	; 0
    179e:	ac 0f       	add	r26, r28
    17a0:	bd 1f       	adc	r27, r29
    17a2:	ea 0f       	add	r30, r26
    17a4:	fb 1f       	adc	r31, r27
    17a6:	8e e2       	ldi	r24, 0x2E	; 46
    17a8:	a8 2e       	mov	r10, r24
    17aa:	4b 01       	movw	r8, r22
    17ac:	80 1a       	sub	r8, r16
    17ae:	91 08       	sbc	r9, r1
    17b0:	0b 2d       	mov	r16, r11
    17b2:	10 e0       	ldi	r17, 0x00	; 0
    17b4:	11 95       	neg	r17
    17b6:	01 95       	neg	r16
    17b8:	11 09       	sbc	r17, r1
    17ba:	4f 3f       	cpi	r20, 0xFF	; 255
    17bc:	bf ef       	ldi	r27, 0xFF	; 255
    17be:	5b 07       	cpc	r21, r27
    17c0:	21 f4       	brne	.+8      	; 0x17ca <dtoa_prf+0x24c>
    17c2:	d6 01       	movw	r26, r12
    17c4:	ac 92       	st	X, r10
    17c6:	11 96       	adiw	r26, 0x01	; 1
    17c8:	6d 01       	movw	r12, r26
    17ca:	64 17       	cp	r22, r20
    17cc:	75 07       	cpc	r23, r21
    17ce:	2c f0       	brlt	.+10     	; 0x17da <dtoa_prf+0x25c>
    17d0:	84 16       	cp	r8, r20
    17d2:	95 06       	cpc	r9, r21
    17d4:	14 f4       	brge	.+4      	; 0x17da <dtoa_prf+0x25c>
    17d6:	81 81       	ldd	r24, Z+1	; 0x01
    17d8:	01 c0       	rjmp	.+2      	; 0x17dc <dtoa_prf+0x25e>
    17da:	80 e3       	ldi	r24, 0x30	; 48
    17dc:	41 50       	subi	r20, 0x01	; 1
    17de:	51 09       	sbc	r21, r1
    17e0:	31 96       	adiw	r30, 0x01	; 1
    17e2:	d6 01       	movw	r26, r12
    17e4:	11 96       	adiw	r26, 0x01	; 1
    17e6:	7d 01       	movw	r14, r26
    17e8:	40 17       	cp	r20, r16
    17ea:	51 07       	cpc	r21, r17
    17ec:	24 f0       	brlt	.+8      	; 0x17f6 <dtoa_prf+0x278>
    17ee:	d6 01       	movw	r26, r12
    17f0:	8c 93       	st	X, r24
    17f2:	67 01       	movw	r12, r14
    17f4:	e2 cf       	rjmp	.-60     	; 0x17ba <dtoa_prf+0x23c>
    17f6:	64 17       	cp	r22, r20
    17f8:	75 07       	cpc	r23, r21
    17fa:	39 f4       	brne	.+14     	; 0x180a <dtoa_prf+0x28c>
    17fc:	96 33       	cpi	r25, 0x36	; 54
    17fe:	20 f4       	brcc	.+8      	; 0x1808 <dtoa_prf+0x28a>
    1800:	95 33       	cpi	r25, 0x35	; 53
    1802:	19 f4       	brne	.+6      	; 0x180a <dtoa_prf+0x28c>
    1804:	31 11       	cpse	r19, r1
    1806:	01 c0       	rjmp	.+2      	; 0x180a <dtoa_prf+0x28c>
    1808:	81 e3       	ldi	r24, 0x31	; 49
    180a:	f6 01       	movw	r30, r12
    180c:	80 83       	st	Z, r24
    180e:	f7 01       	movw	r30, r14
    1810:	82 2f       	mov	r24, r18
    1812:	90 e2       	ldi	r25, 0x20	; 32
    1814:	88 23       	and	r24, r24
    1816:	19 f0       	breq	.+6      	; 0x181e <dtoa_prf+0x2a0>
    1818:	91 93       	st	Z+, r25
    181a:	81 50       	subi	r24, 0x01	; 1
    181c:	fb cf       	rjmp	.-10     	; 0x1814 <dtoa_prf+0x296>
    181e:	f7 01       	movw	r30, r14
    1820:	e2 0f       	add	r30, r18
    1822:	f1 1d       	adc	r31, r1
    1824:	10 82       	st	Z, r1
    1826:	80 e0       	ldi	r24, 0x00	; 0
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	29 96       	adiw	r28, 0x09	; 9
    182c:	ec e0       	ldi	r30, 0x0C	; 12
    182e:	0c 94 90 0e 	jmp	0x1d20	; 0x1d20 <__epilogue_restores__+0xc>

00001832 <strtod>:
    1832:	a0 e0       	ldi	r26, 0x00	; 0
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	ef e1       	ldi	r30, 0x1F	; 31
    1838:	fc e0       	ldi	r31, 0x0C	; 12
    183a:	0c 94 74 0e 	jmp	0x1ce8	; 0x1ce8 <__prologue_saves__+0xc>
    183e:	ec 01       	movw	r28, r24
    1840:	6b 01       	movw	r12, r22
    1842:	61 15       	cp	r22, r1
    1844:	71 05       	cpc	r23, r1
    1846:	19 f0       	breq	.+6      	; 0x184e <strtod+0x1c>
    1848:	fb 01       	movw	r30, r22
    184a:	91 83       	std	Z+1, r25	; 0x01
    184c:	80 83       	st	Z, r24
    184e:	7e 01       	movw	r14, r28
    1850:	ff ef       	ldi	r31, 0xFF	; 255
    1852:	ef 1a       	sub	r14, r31
    1854:	ff 0a       	sbc	r15, r31
    1856:	08 81       	ld	r16, Y
    1858:	80 2f       	mov	r24, r16
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <isspace>
    1860:	89 2b       	or	r24, r25
    1862:	11 f0       	breq	.+4      	; 0x1868 <strtod+0x36>
    1864:	e7 01       	movw	r28, r14
    1866:	f3 cf       	rjmp	.-26     	; 0x184e <strtod+0x1c>
    1868:	0d 32       	cpi	r16, 0x2D	; 45
    186a:	39 f4       	brne	.+14     	; 0x187a <strtod+0x48>
    186c:	7e 01       	movw	r14, r28
    186e:	82 e0       	ldi	r24, 0x02	; 2
    1870:	e8 0e       	add	r14, r24
    1872:	f1 1c       	adc	r15, r1
    1874:	09 81       	ldd	r16, Y+1	; 0x01
    1876:	11 e0       	ldi	r17, 0x01	; 1
    1878:	08 c0       	rjmp	.+16     	; 0x188a <strtod+0x58>
    187a:	0b 32       	cpi	r16, 0x2B	; 43
    187c:	29 f4       	brne	.+10     	; 0x1888 <strtod+0x56>
    187e:	7e 01       	movw	r14, r28
    1880:	92 e0       	ldi	r25, 0x02	; 2
    1882:	e9 0e       	add	r14, r25
    1884:	f1 1c       	adc	r15, r1
    1886:	09 81       	ldd	r16, Y+1	; 0x01
    1888:	10 e0       	ldi	r17, 0x00	; 0
    188a:	e7 01       	movw	r28, r14
    188c:	21 97       	sbiw	r28, 0x01	; 1
    188e:	43 e0       	ldi	r20, 0x03	; 3
    1890:	50 e0       	ldi	r21, 0x00	; 0
    1892:	6c e5       	ldi	r22, 0x5C	; 92
    1894:	70 e0       	ldi	r23, 0x00	; 0
    1896:	ce 01       	movw	r24, r28
    1898:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <strncasecmp_P>
    189c:	89 2b       	or	r24, r25
    189e:	c1 f4       	brne	.+48     	; 0x18d0 <strtod+0x9e>
    18a0:	23 96       	adiw	r28, 0x03	; 3
    18a2:	45 e0       	ldi	r20, 0x05	; 5
    18a4:	50 e0       	ldi	r21, 0x00	; 0
    18a6:	67 e5       	ldi	r22, 0x57	; 87
    18a8:	70 e0       	ldi	r23, 0x00	; 0
    18aa:	ce 01       	movw	r24, r28
    18ac:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <strncasecmp_P>
    18b0:	89 2b       	or	r24, r25
    18b2:	09 f4       	brne	.+2      	; 0x18b6 <strtod+0x84>
    18b4:	25 96       	adiw	r28, 0x05	; 5
    18b6:	c1 14       	cp	r12, r1
    18b8:	d1 04       	cpc	r13, r1
    18ba:	19 f0       	breq	.+6      	; 0x18c2 <strtod+0x90>
    18bc:	f6 01       	movw	r30, r12
    18be:	d1 83       	std	Z+1, r29	; 0x01
    18c0:	c0 83       	st	Z, r28
    18c2:	11 11       	cpse	r17, r1
    18c4:	f6 c0       	rjmp	.+492    	; 0x1ab2 <strtod+0x280>
    18c6:	60 e0       	ldi	r22, 0x00	; 0
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	80 e8       	ldi	r24, 0x80	; 128
    18cc:	9f e7       	ldi	r25, 0x7F	; 127
    18ce:	fa c0       	rjmp	.+500    	; 0x1ac4 <strtod+0x292>
    18d0:	43 e0       	ldi	r20, 0x03	; 3
    18d2:	50 e0       	ldi	r21, 0x00	; 0
    18d4:	64 e5       	ldi	r22, 0x54	; 84
    18d6:	70 e0       	ldi	r23, 0x00	; 0
    18d8:	ce 01       	movw	r24, r28
    18da:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <strncasecmp_P>
    18de:	89 2b       	or	r24, r25
    18e0:	59 f4       	brne	.+22     	; 0x18f8 <strtod+0xc6>
    18e2:	c1 14       	cp	r12, r1
    18e4:	d1 04       	cpc	r13, r1
    18e6:	09 f4       	brne	.+2      	; 0x18ea <strtod+0xb8>
    18e8:	e9 c0       	rjmp	.+466    	; 0x1abc <strtod+0x28a>
    18ea:	f2 e0       	ldi	r31, 0x02	; 2
    18ec:	ef 0e       	add	r14, r31
    18ee:	f1 1c       	adc	r15, r1
    18f0:	f6 01       	movw	r30, r12
    18f2:	f1 82       	std	Z+1, r15	; 0x01
    18f4:	e0 82       	st	Z, r14
    18f6:	e2 c0       	rjmp	.+452    	; 0x1abc <strtod+0x28a>
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	a9 01       	movw	r20, r18
    18fe:	c0 e0       	ldi	r28, 0x00	; 0
    1900:	d0 e0       	ldi	r29, 0x00	; 0
    1902:	f7 01       	movw	r30, r14
    1904:	80 ed       	ldi	r24, 0xD0	; 208
    1906:	a8 2e       	mov	r10, r24
    1908:	a0 0e       	add	r10, r16
    190a:	89 e0       	ldi	r24, 0x09	; 9
    190c:	8a 15       	cp	r24, r10
    190e:	30 f1       	brcs	.+76     	; 0x195c <strtod+0x12a>
    1910:	91 2f       	mov	r25, r17
    1912:	92 60       	ori	r25, 0x02	; 2
    1914:	b9 2e       	mov	r11, r25
    1916:	81 2f       	mov	r24, r17
    1918:	88 70       	andi	r24, 0x08	; 8
    191a:	12 ff       	sbrs	r17, 2
    191c:	04 c0       	rjmp	.+8      	; 0x1926 <strtod+0xf4>
    191e:	81 11       	cpse	r24, r1
    1920:	24 c0       	rjmp	.+72     	; 0x196a <strtod+0x138>
    1922:	21 96       	adiw	r28, 0x01	; 1
    1924:	22 c0       	rjmp	.+68     	; 0x196a <strtod+0x138>
    1926:	81 11       	cpse	r24, r1
    1928:	21 97       	sbiw	r28, 0x01	; 1
    192a:	a5 e0       	ldi	r26, 0x05	; 5
    192c:	b0 e0       	ldi	r27, 0x00	; 0
    192e:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__muluhisi3>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	88 0f       	add	r24, r24
    1938:	99 1f       	adc	r25, r25
    193a:	aa 1f       	adc	r26, r26
    193c:	bb 1f       	adc	r27, r27
    193e:	9c 01       	movw	r18, r24
    1940:	ad 01       	movw	r20, r26
    1942:	2a 0d       	add	r18, r10
    1944:	31 1d       	adc	r19, r1
    1946:	41 1d       	adc	r20, r1
    1948:	51 1d       	adc	r21, r1
    194a:	28 39       	cpi	r18, 0x98	; 152
    194c:	89 e9       	ldi	r24, 0x99	; 153
    194e:	38 07       	cpc	r19, r24
    1950:	48 07       	cpc	r20, r24
    1952:	89 e1       	ldi	r24, 0x19	; 25
    1954:	58 07       	cpc	r21, r24
    1956:	48 f0       	brcs	.+18     	; 0x196a <strtod+0x138>
    1958:	16 60       	ori	r17, 0x06	; 6
    195a:	06 c0       	rjmp	.+12     	; 0x1968 <strtod+0x136>
    195c:	9e ef       	ldi	r25, 0xFE	; 254
    195e:	a9 12       	cpse	r10, r25
    1960:	0a c0       	rjmp	.+20     	; 0x1976 <strtod+0x144>
    1962:	13 fd       	sbrc	r17, 3
    1964:	40 c0       	rjmp	.+128    	; 0x19e6 <strtod+0x1b4>
    1966:	18 60       	ori	r17, 0x08	; 8
    1968:	b1 2e       	mov	r11, r17
    196a:	8f ef       	ldi	r24, 0xFF	; 255
    196c:	e8 1a       	sub	r14, r24
    196e:	f8 0a       	sbc	r15, r24
    1970:	00 81       	ld	r16, Z
    1972:	1b 2d       	mov	r17, r11
    1974:	c6 cf       	rjmp	.-116    	; 0x1902 <strtod+0xd0>
    1976:	80 2f       	mov	r24, r16
    1978:	8f 7d       	andi	r24, 0xDF	; 223
    197a:	85 34       	cpi	r24, 0x45	; 69
    197c:	a1 f5       	brne	.+104    	; 0x19e6 <strtod+0x1b4>
    197e:	80 81       	ld	r24, Z
    1980:	8d 32       	cpi	r24, 0x2D	; 45
    1982:	11 f4       	brne	.+4      	; 0x1988 <strtod+0x156>
    1984:	10 61       	ori	r17, 0x10	; 16
    1986:	06 c0       	rjmp	.+12     	; 0x1994 <strtod+0x162>
    1988:	8b 32       	cpi	r24, 0x2B	; 43
    198a:	21 f0       	breq	.+8      	; 0x1994 <strtod+0x162>
    198c:	31 96       	adiw	r30, 0x01	; 1
    198e:	61 e0       	ldi	r22, 0x01	; 1
    1990:	70 e0       	ldi	r23, 0x00	; 0
    1992:	04 c0       	rjmp	.+8      	; 0x199c <strtod+0x16a>
    1994:	81 81       	ldd	r24, Z+1	; 0x01
    1996:	32 96       	adiw	r30, 0x02	; 2
    1998:	62 e0       	ldi	r22, 0x02	; 2
    199a:	70 e0       	ldi	r23, 0x00	; 0
    199c:	80 53       	subi	r24, 0x30	; 48
    199e:	8a 30       	cpi	r24, 0x0A	; 10
    19a0:	18 f0       	brcs	.+6      	; 0x19a8 <strtod+0x176>
    19a2:	e6 1b       	sub	r30, r22
    19a4:	f7 0b       	sbc	r31, r23
    19a6:	1f c0       	rjmp	.+62     	; 0x19e6 <strtod+0x1b4>
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	60 38       	cpi	r22, 0x80	; 128
    19ae:	9c e0       	ldi	r25, 0x0C	; 12
    19b0:	79 07       	cpc	r23, r25
    19b2:	5c f4       	brge	.+22     	; 0x19ca <strtod+0x198>
    19b4:	db 01       	movw	r26, r22
    19b6:	aa 0f       	add	r26, r26
    19b8:	bb 1f       	adc	r27, r27
    19ba:	aa 0f       	add	r26, r26
    19bc:	bb 1f       	adc	r27, r27
    19be:	6a 0f       	add	r22, r26
    19c0:	7b 1f       	adc	r23, r27
    19c2:	66 0f       	add	r22, r22
    19c4:	77 1f       	adc	r23, r23
    19c6:	68 0f       	add	r22, r24
    19c8:	71 1d       	adc	r23, r1
    19ca:	31 96       	adiw	r30, 0x01	; 1
    19cc:	df 01       	movw	r26, r30
    19ce:	11 97       	sbiw	r26, 0x01	; 1
    19d0:	8c 91       	ld	r24, X
    19d2:	80 53       	subi	r24, 0x30	; 48
    19d4:	8a 30       	cpi	r24, 0x0A	; 10
    19d6:	50 f3       	brcs	.-44     	; 0x19ac <strtod+0x17a>
    19d8:	14 ff       	sbrs	r17, 4
    19da:	03 c0       	rjmp	.+6      	; 0x19e2 <strtod+0x1b0>
    19dc:	71 95       	neg	r23
    19de:	61 95       	neg	r22
    19e0:	71 09       	sbc	r23, r1
    19e2:	c6 0f       	add	r28, r22
    19e4:	d7 1f       	adc	r29, r23
    19e6:	11 ff       	sbrs	r17, 1
    19e8:	08 c0       	rjmp	.+16     	; 0x19fa <strtod+0x1c8>
    19ea:	c1 14       	cp	r12, r1
    19ec:	d1 04       	cpc	r13, r1
    19ee:	29 f0       	breq	.+10     	; 0x19fa <strtod+0x1c8>
    19f0:	cf 01       	movw	r24, r30
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	f6 01       	movw	r30, r12
    19f6:	91 83       	std	Z+1, r25	; 0x01
    19f8:	80 83       	st	Z, r24
    19fa:	ca 01       	movw	r24, r20
    19fc:	b9 01       	movw	r22, r18
    19fe:	0e 94 4a 09 	call	0x1294	; 0x1294 <__floatunsisf>
    1a02:	21 2f       	mov	r18, r17
    1a04:	23 70       	andi	r18, 0x03	; 3
    1a06:	23 30       	cpi	r18, 0x03	; 3
    1a08:	19 f0       	breq	.+6      	; 0x1a10 <strtod+0x1de>
    1a0a:	4b 01       	movw	r8, r22
    1a0c:	5c 01       	movw	r10, r24
    1a0e:	06 c0       	rjmp	.+12     	; 0x1a1c <strtod+0x1ea>
    1a10:	4b 01       	movw	r8, r22
    1a12:	5c 01       	movw	r10, r24
    1a14:	b7 fa       	bst	r11, 7
    1a16:	b0 94       	com	r11
    1a18:	b7 f8       	bld	r11, 7
    1a1a:	b0 94       	com	r11
    1a1c:	20 e0       	ldi	r18, 0x00	; 0
    1a1e:	30 e0       	ldi	r19, 0x00	; 0
    1a20:	a9 01       	movw	r20, r18
    1a22:	c5 01       	movw	r24, r10
    1a24:	b4 01       	movw	r22, r8
    1a26:	0e 94 9d 08 	call	0x113a	; 0x113a <__cmpsf2>
    1a2a:	88 23       	and	r24, r24
    1a2c:	09 f4       	brne	.+2      	; 0x1a30 <strtod+0x1fe>
    1a2e:	3e c0       	rjmp	.+124    	; 0x1aac <strtod+0x27a>
    1a30:	d7 ff       	sbrs	r29, 7
    1a32:	06 c0       	rjmp	.+12     	; 0x1a40 <strtod+0x20e>
    1a34:	d1 95       	neg	r29
    1a36:	c1 95       	neg	r28
    1a38:	d1 09       	sbc	r29, r1
    1a3a:	03 e7       	ldi	r16, 0x73	; 115
    1a3c:	10 e0       	ldi	r17, 0x00	; 0
    1a3e:	02 c0       	rjmp	.+4      	; 0x1a44 <strtod+0x212>
    1a40:	0b e8       	ldi	r16, 0x8B	; 139
    1a42:	10 e0       	ldi	r17, 0x00	; 0
    1a44:	68 01       	movw	r12, r16
    1a46:	f8 e1       	ldi	r31, 0x18	; 24
    1a48:	cf 1a       	sub	r12, r31
    1a4a:	d1 08       	sbc	r13, r1
    1a4c:	90 e2       	ldi	r25, 0x20	; 32
    1a4e:	e9 2e       	mov	r14, r25
    1a50:	f1 2c       	mov	r15, r1
    1a52:	ce 15       	cp	r28, r14
    1a54:	df 05       	cpc	r29, r15
    1a56:	74 f0       	brlt	.+28     	; 0x1a74 <strtod+0x242>
    1a58:	f8 01       	movw	r30, r16
    1a5a:	25 91       	lpm	r18, Z+
    1a5c:	35 91       	lpm	r19, Z+
    1a5e:	45 91       	lpm	r20, Z+
    1a60:	54 91       	lpm	r21, Z
    1a62:	c5 01       	movw	r24, r10
    1a64:	b4 01       	movw	r22, r8
    1a66:	0e 94 01 0a 	call	0x1402	; 0x1402 <__mulsf3>
    1a6a:	4b 01       	movw	r8, r22
    1a6c:	5c 01       	movw	r10, r24
    1a6e:	ce 19       	sub	r28, r14
    1a70:	df 09       	sbc	r29, r15
    1a72:	ef cf       	rjmp	.-34     	; 0x1a52 <strtod+0x220>
    1a74:	04 50       	subi	r16, 0x04	; 4
    1a76:	11 09       	sbc	r17, r1
    1a78:	f5 94       	asr	r15
    1a7a:	e7 94       	ror	r14
    1a7c:	0c 15       	cp	r16, r12
    1a7e:	1d 05       	cpc	r17, r13
    1a80:	41 f7       	brne	.-48     	; 0x1a52 <strtod+0x220>
    1a82:	8a 2d       	mov	r24, r10
    1a84:	88 0f       	add	r24, r24
    1a86:	8b 2d       	mov	r24, r11
    1a88:	88 1f       	adc	r24, r24
    1a8a:	8f 3f       	cpi	r24, 0xFF	; 255
    1a8c:	49 f0       	breq	.+18     	; 0x1aa0 <strtod+0x26e>
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	30 e0       	ldi	r19, 0x00	; 0
    1a92:	a9 01       	movw	r20, r18
    1a94:	c5 01       	movw	r24, r10
    1a96:	b4 01       	movw	r22, r8
    1a98:	0e 94 9d 08 	call	0x113a	; 0x113a <__cmpsf2>
    1a9c:	81 11       	cpse	r24, r1
    1a9e:	06 c0       	rjmp	.+12     	; 0x1aac <strtod+0x27a>
    1aa0:	82 e2       	ldi	r24, 0x22	; 34
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	90 93 c3 02 	sts	0x02C3, r25	; 0x8002c3 <errno+0x1>
    1aa8:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <errno>
    1aac:	c5 01       	movw	r24, r10
    1aae:	b4 01       	movw	r22, r8
    1ab0:	09 c0       	rjmp	.+18     	; 0x1ac4 <strtod+0x292>
    1ab2:	60 e0       	ldi	r22, 0x00	; 0
    1ab4:	70 e0       	ldi	r23, 0x00	; 0
    1ab6:	80 e8       	ldi	r24, 0x80	; 128
    1ab8:	9f ef       	ldi	r25, 0xFF	; 255
    1aba:	04 c0       	rjmp	.+8      	; 0x1ac4 <strtod+0x292>
    1abc:	60 e0       	ldi	r22, 0x00	; 0
    1abe:	70 e0       	ldi	r23, 0x00	; 0
    1ac0:	80 ec       	ldi	r24, 0xC0	; 192
    1ac2:	9f e7       	ldi	r25, 0x7F	; 127
    1ac4:	cd b7       	in	r28, 0x3d	; 61
    1ac6:	de b7       	in	r29, 0x3e	; 62
    1ac8:	ec e0       	ldi	r30, 0x0C	; 12
    1aca:	0c 94 90 0e 	jmp	0x1d20	; 0x1d20 <__epilogue_restores__+0xc>

00001ace <__ftoa_engine>:
    1ace:	28 30       	cpi	r18, 0x08	; 8
    1ad0:	08 f0       	brcs	.+2      	; 0x1ad4 <__ftoa_engine+0x6>
    1ad2:	27 e0       	ldi	r18, 0x07	; 7
    1ad4:	33 27       	eor	r19, r19
    1ad6:	da 01       	movw	r26, r20
    1ad8:	99 0f       	add	r25, r25
    1ada:	31 1d       	adc	r19, r1
    1adc:	87 fd       	sbrc	r24, 7
    1ade:	91 60       	ori	r25, 0x01	; 1
    1ae0:	00 96       	adiw	r24, 0x00	; 0
    1ae2:	61 05       	cpc	r22, r1
    1ae4:	71 05       	cpc	r23, r1
    1ae6:	39 f4       	brne	.+14     	; 0x1af6 <__ftoa_engine+0x28>
    1ae8:	32 60       	ori	r19, 0x02	; 2
    1aea:	2e 5f       	subi	r18, 0xFE	; 254
    1aec:	3d 93       	st	X+, r19
    1aee:	30 e3       	ldi	r19, 0x30	; 48
    1af0:	2a 95       	dec	r18
    1af2:	e1 f7       	brne	.-8      	; 0x1aec <__ftoa_engine+0x1e>
    1af4:	08 95       	ret
    1af6:	9f 3f       	cpi	r25, 0xFF	; 255
    1af8:	30 f0       	brcs	.+12     	; 0x1b06 <__ftoa_engine+0x38>
    1afa:	80 38       	cpi	r24, 0x80	; 128
    1afc:	71 05       	cpc	r23, r1
    1afe:	61 05       	cpc	r22, r1
    1b00:	09 f0       	breq	.+2      	; 0x1b04 <__ftoa_engine+0x36>
    1b02:	3c 5f       	subi	r19, 0xFC	; 252
    1b04:	3c 5f       	subi	r19, 0xFC	; 252
    1b06:	3d 93       	st	X+, r19
    1b08:	91 30       	cpi	r25, 0x01	; 1
    1b0a:	08 f0       	brcs	.+2      	; 0x1b0e <__ftoa_engine+0x40>
    1b0c:	80 68       	ori	r24, 0x80	; 128
    1b0e:	91 1d       	adc	r25, r1
    1b10:	df 93       	push	r29
    1b12:	cf 93       	push	r28
    1b14:	1f 93       	push	r17
    1b16:	0f 93       	push	r16
    1b18:	ff 92       	push	r15
    1b1a:	ef 92       	push	r14
    1b1c:	19 2f       	mov	r17, r25
    1b1e:	98 7f       	andi	r25, 0xF8	; 248
    1b20:	96 95       	lsr	r25
    1b22:	e9 2f       	mov	r30, r25
    1b24:	96 95       	lsr	r25
    1b26:	96 95       	lsr	r25
    1b28:	e9 0f       	add	r30, r25
    1b2a:	ff 27       	eor	r31, r31
    1b2c:	e7 51       	subi	r30, 0x17	; 23
    1b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b30:	99 27       	eor	r25, r25
    1b32:	33 27       	eor	r19, r19
    1b34:	ee 24       	eor	r14, r14
    1b36:	ff 24       	eor	r15, r15
    1b38:	a7 01       	movw	r20, r14
    1b3a:	e7 01       	movw	r28, r14
    1b3c:	05 90       	lpm	r0, Z+
    1b3e:	08 94       	sec
    1b40:	07 94       	ror	r0
    1b42:	28 f4       	brcc	.+10     	; 0x1b4e <__ftoa_engine+0x80>
    1b44:	36 0f       	add	r19, r22
    1b46:	e7 1e       	adc	r14, r23
    1b48:	f8 1e       	adc	r15, r24
    1b4a:	49 1f       	adc	r20, r25
    1b4c:	51 1d       	adc	r21, r1
    1b4e:	66 0f       	add	r22, r22
    1b50:	77 1f       	adc	r23, r23
    1b52:	88 1f       	adc	r24, r24
    1b54:	99 1f       	adc	r25, r25
    1b56:	06 94       	lsr	r0
    1b58:	a1 f7       	brne	.-24     	; 0x1b42 <__ftoa_engine+0x74>
    1b5a:	05 90       	lpm	r0, Z+
    1b5c:	07 94       	ror	r0
    1b5e:	28 f4       	brcc	.+10     	; 0x1b6a <__ftoa_engine+0x9c>
    1b60:	e7 0e       	add	r14, r23
    1b62:	f8 1e       	adc	r15, r24
    1b64:	49 1f       	adc	r20, r25
    1b66:	56 1f       	adc	r21, r22
    1b68:	c1 1d       	adc	r28, r1
    1b6a:	77 0f       	add	r23, r23
    1b6c:	88 1f       	adc	r24, r24
    1b6e:	99 1f       	adc	r25, r25
    1b70:	66 1f       	adc	r22, r22
    1b72:	06 94       	lsr	r0
    1b74:	a1 f7       	brne	.-24     	; 0x1b5e <__ftoa_engine+0x90>
    1b76:	05 90       	lpm	r0, Z+
    1b78:	07 94       	ror	r0
    1b7a:	28 f4       	brcc	.+10     	; 0x1b86 <__ftoa_engine+0xb8>
    1b7c:	f8 0e       	add	r15, r24
    1b7e:	49 1f       	adc	r20, r25
    1b80:	56 1f       	adc	r21, r22
    1b82:	c7 1f       	adc	r28, r23
    1b84:	d1 1d       	adc	r29, r1
    1b86:	88 0f       	add	r24, r24
    1b88:	99 1f       	adc	r25, r25
    1b8a:	66 1f       	adc	r22, r22
    1b8c:	77 1f       	adc	r23, r23
    1b8e:	06 94       	lsr	r0
    1b90:	a1 f7       	brne	.-24     	; 0x1b7a <__ftoa_engine+0xac>
    1b92:	05 90       	lpm	r0, Z+
    1b94:	07 94       	ror	r0
    1b96:	20 f4       	brcc	.+8      	; 0x1ba0 <__ftoa_engine+0xd2>
    1b98:	49 0f       	add	r20, r25
    1b9a:	56 1f       	adc	r21, r22
    1b9c:	c7 1f       	adc	r28, r23
    1b9e:	d8 1f       	adc	r29, r24
    1ba0:	99 0f       	add	r25, r25
    1ba2:	66 1f       	adc	r22, r22
    1ba4:	77 1f       	adc	r23, r23
    1ba6:	88 1f       	adc	r24, r24
    1ba8:	06 94       	lsr	r0
    1baa:	a9 f7       	brne	.-22     	; 0x1b96 <__ftoa_engine+0xc8>
    1bac:	84 91       	lpm	r24, Z
    1bae:	10 95       	com	r17
    1bb0:	17 70       	andi	r17, 0x07	; 7
    1bb2:	41 f0       	breq	.+16     	; 0x1bc4 <__ftoa_engine+0xf6>
    1bb4:	d6 95       	lsr	r29
    1bb6:	c7 95       	ror	r28
    1bb8:	57 95       	ror	r21
    1bba:	47 95       	ror	r20
    1bbc:	f7 94       	ror	r15
    1bbe:	e7 94       	ror	r14
    1bc0:	1a 95       	dec	r17
    1bc2:	c1 f7       	brne	.-16     	; 0x1bb4 <__ftoa_engine+0xe6>
    1bc4:	ef e8       	ldi	r30, 0x8F	; 143
    1bc6:	f0 e0       	ldi	r31, 0x00	; 0
    1bc8:	68 94       	set
    1bca:	15 90       	lpm	r1, Z+
    1bcc:	15 91       	lpm	r17, Z+
    1bce:	35 91       	lpm	r19, Z+
    1bd0:	65 91       	lpm	r22, Z+
    1bd2:	95 91       	lpm	r25, Z+
    1bd4:	05 90       	lpm	r0, Z+
    1bd6:	7f e2       	ldi	r23, 0x2F	; 47
    1bd8:	73 95       	inc	r23
    1bda:	e1 18       	sub	r14, r1
    1bdc:	f1 0a       	sbc	r15, r17
    1bde:	43 0b       	sbc	r20, r19
    1be0:	56 0b       	sbc	r21, r22
    1be2:	c9 0b       	sbc	r28, r25
    1be4:	d0 09       	sbc	r29, r0
    1be6:	c0 f7       	brcc	.-16     	; 0x1bd8 <__ftoa_engine+0x10a>
    1be8:	e1 0c       	add	r14, r1
    1bea:	f1 1e       	adc	r15, r17
    1bec:	43 1f       	adc	r20, r19
    1bee:	56 1f       	adc	r21, r22
    1bf0:	c9 1f       	adc	r28, r25
    1bf2:	d0 1d       	adc	r29, r0
    1bf4:	7e f4       	brtc	.+30     	; 0x1c14 <__ftoa_engine+0x146>
    1bf6:	70 33       	cpi	r23, 0x30	; 48
    1bf8:	11 f4       	brne	.+4      	; 0x1bfe <__ftoa_engine+0x130>
    1bfa:	8a 95       	dec	r24
    1bfc:	e6 cf       	rjmp	.-52     	; 0x1bca <__ftoa_engine+0xfc>
    1bfe:	e8 94       	clt
    1c00:	01 50       	subi	r16, 0x01	; 1
    1c02:	30 f0       	brcs	.+12     	; 0x1c10 <__ftoa_engine+0x142>
    1c04:	08 0f       	add	r16, r24
    1c06:	0a f4       	brpl	.+2      	; 0x1c0a <__ftoa_engine+0x13c>
    1c08:	00 27       	eor	r16, r16
    1c0a:	02 17       	cp	r16, r18
    1c0c:	08 f4       	brcc	.+2      	; 0x1c10 <__ftoa_engine+0x142>
    1c0e:	20 2f       	mov	r18, r16
    1c10:	23 95       	inc	r18
    1c12:	02 2f       	mov	r16, r18
    1c14:	7a 33       	cpi	r23, 0x3A	; 58
    1c16:	28 f0       	brcs	.+10     	; 0x1c22 <__ftoa_engine+0x154>
    1c18:	79 e3       	ldi	r23, 0x39	; 57
    1c1a:	7d 93       	st	X+, r23
    1c1c:	2a 95       	dec	r18
    1c1e:	e9 f7       	brne	.-6      	; 0x1c1a <__ftoa_engine+0x14c>
    1c20:	10 c0       	rjmp	.+32     	; 0x1c42 <__ftoa_engine+0x174>
    1c22:	7d 93       	st	X+, r23
    1c24:	2a 95       	dec	r18
    1c26:	89 f6       	brne	.-94     	; 0x1bca <__ftoa_engine+0xfc>
    1c28:	06 94       	lsr	r0
    1c2a:	97 95       	ror	r25
    1c2c:	67 95       	ror	r22
    1c2e:	37 95       	ror	r19
    1c30:	17 95       	ror	r17
    1c32:	17 94       	ror	r1
    1c34:	e1 18       	sub	r14, r1
    1c36:	f1 0a       	sbc	r15, r17
    1c38:	43 0b       	sbc	r20, r19
    1c3a:	56 0b       	sbc	r21, r22
    1c3c:	c9 0b       	sbc	r28, r25
    1c3e:	d0 09       	sbc	r29, r0
    1c40:	98 f0       	brcs	.+38     	; 0x1c68 <__ftoa_engine+0x19a>
    1c42:	23 95       	inc	r18
    1c44:	7e 91       	ld	r23, -X
    1c46:	73 95       	inc	r23
    1c48:	7a 33       	cpi	r23, 0x3A	; 58
    1c4a:	08 f0       	brcs	.+2      	; 0x1c4e <__ftoa_engine+0x180>
    1c4c:	70 e3       	ldi	r23, 0x30	; 48
    1c4e:	7c 93       	st	X, r23
    1c50:	20 13       	cpse	r18, r16
    1c52:	b8 f7       	brcc	.-18     	; 0x1c42 <__ftoa_engine+0x174>
    1c54:	7e 91       	ld	r23, -X
    1c56:	70 61       	ori	r23, 0x10	; 16
    1c58:	7d 93       	st	X+, r23
    1c5a:	30 f0       	brcs	.+12     	; 0x1c68 <__ftoa_engine+0x19a>
    1c5c:	83 95       	inc	r24
    1c5e:	71 e3       	ldi	r23, 0x31	; 49
    1c60:	7d 93       	st	X+, r23
    1c62:	70 e3       	ldi	r23, 0x30	; 48
    1c64:	2a 95       	dec	r18
    1c66:	e1 f7       	brne	.-8      	; 0x1c60 <__ftoa_engine+0x192>
    1c68:	11 24       	eor	r1, r1
    1c6a:	ef 90       	pop	r14
    1c6c:	ff 90       	pop	r15
    1c6e:	0f 91       	pop	r16
    1c70:	1f 91       	pop	r17
    1c72:	cf 91       	pop	r28
    1c74:	df 91       	pop	r29
    1c76:	99 27       	eor	r25, r25
    1c78:	87 fd       	sbrc	r24, 7
    1c7a:	90 95       	com	r25
    1c7c:	08 95       	ret

00001c7e <isspace>:
    1c7e:	91 11       	cpse	r25, r1
    1c80:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__ctype_isfalse>
    1c84:	80 32       	cpi	r24, 0x20	; 32
    1c86:	19 f0       	breq	.+6      	; 0x1c8e <isspace+0x10>
    1c88:	89 50       	subi	r24, 0x09	; 9
    1c8a:	85 50       	subi	r24, 0x05	; 5
    1c8c:	c8 f7       	brcc	.-14     	; 0x1c80 <isspace+0x2>
    1c8e:	08 95       	ret

00001c90 <strncasecmp_P>:
    1c90:	fb 01       	movw	r30, r22
    1c92:	dc 01       	movw	r26, r24
    1c94:	41 50       	subi	r20, 0x01	; 1
    1c96:	50 40       	sbci	r21, 0x00	; 0
    1c98:	88 f0       	brcs	.+34     	; 0x1cbc <strncasecmp_P+0x2c>
    1c9a:	8d 91       	ld	r24, X+
    1c9c:	81 34       	cpi	r24, 0x41	; 65
    1c9e:	1c f0       	brlt	.+6      	; 0x1ca6 <strncasecmp_P+0x16>
    1ca0:	8b 35       	cpi	r24, 0x5B	; 91
    1ca2:	0c f4       	brge	.+2      	; 0x1ca6 <strncasecmp_P+0x16>
    1ca4:	80 5e       	subi	r24, 0xE0	; 224
    1ca6:	65 91       	lpm	r22, Z+
    1ca8:	61 34       	cpi	r22, 0x41	; 65
    1caa:	1c f0       	brlt	.+6      	; 0x1cb2 <strncasecmp_P+0x22>
    1cac:	6b 35       	cpi	r22, 0x5B	; 91
    1cae:	0c f4       	brge	.+2      	; 0x1cb2 <strncasecmp_P+0x22>
    1cb0:	60 5e       	subi	r22, 0xE0	; 224
    1cb2:	86 1b       	sub	r24, r22
    1cb4:	61 11       	cpse	r22, r1
    1cb6:	71 f3       	breq	.-36     	; 0x1c94 <strncasecmp_P+0x4>
    1cb8:	99 0b       	sbc	r25, r25
    1cba:	08 95       	ret
    1cbc:	88 1b       	sub	r24, r24
    1cbe:	fc cf       	rjmp	.-8      	; 0x1cb8 <strncasecmp_P+0x28>

00001cc0 <__ctype_isfalse>:
    1cc0:	99 27       	eor	r25, r25
    1cc2:	88 27       	eor	r24, r24

00001cc4 <__ctype_istrue>:
    1cc4:	08 95       	ret

00001cc6 <__muluhisi3>:
    1cc6:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <__umulhisi3>
    1cca:	a5 9f       	mul	r26, r21
    1ccc:	90 0d       	add	r25, r0
    1cce:	b4 9f       	mul	r27, r20
    1cd0:	90 0d       	add	r25, r0
    1cd2:	a4 9f       	mul	r26, r20
    1cd4:	80 0d       	add	r24, r0
    1cd6:	91 1d       	adc	r25, r1
    1cd8:	11 24       	eor	r1, r1
    1cda:	08 95       	ret

00001cdc <__prologue_saves__>:
    1cdc:	2f 92       	push	r2
    1cde:	3f 92       	push	r3
    1ce0:	4f 92       	push	r4
    1ce2:	5f 92       	push	r5
    1ce4:	6f 92       	push	r6
    1ce6:	7f 92       	push	r7
    1ce8:	8f 92       	push	r8
    1cea:	9f 92       	push	r9
    1cec:	af 92       	push	r10
    1cee:	bf 92       	push	r11
    1cf0:	cf 92       	push	r12
    1cf2:	df 92       	push	r13
    1cf4:	ef 92       	push	r14
    1cf6:	ff 92       	push	r15
    1cf8:	0f 93       	push	r16
    1cfa:	1f 93       	push	r17
    1cfc:	cf 93       	push	r28
    1cfe:	df 93       	push	r29
    1d00:	cd b7       	in	r28, 0x3d	; 61
    1d02:	de b7       	in	r29, 0x3e	; 62
    1d04:	ca 1b       	sub	r28, r26
    1d06:	db 0b       	sbc	r29, r27
    1d08:	0f b6       	in	r0, 0x3f	; 63
    1d0a:	f8 94       	cli
    1d0c:	de bf       	out	0x3e, r29	; 62
    1d0e:	0f be       	out	0x3f, r0	; 63
    1d10:	cd bf       	out	0x3d, r28	; 61
    1d12:	09 94       	ijmp

00001d14 <__epilogue_restores__>:
    1d14:	2a 88       	ldd	r2, Y+18	; 0x12
    1d16:	39 88       	ldd	r3, Y+17	; 0x11
    1d18:	48 88       	ldd	r4, Y+16	; 0x10
    1d1a:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d1c:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d1e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d20:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d22:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d24:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d26:	b9 84       	ldd	r11, Y+9	; 0x09
    1d28:	c8 84       	ldd	r12, Y+8	; 0x08
    1d2a:	df 80       	ldd	r13, Y+7	; 0x07
    1d2c:	ee 80       	ldd	r14, Y+6	; 0x06
    1d2e:	fd 80       	ldd	r15, Y+5	; 0x05
    1d30:	0c 81       	ldd	r16, Y+4	; 0x04
    1d32:	1b 81       	ldd	r17, Y+3	; 0x03
    1d34:	aa 81       	ldd	r26, Y+2	; 0x02
    1d36:	b9 81       	ldd	r27, Y+1	; 0x01
    1d38:	ce 0f       	add	r28, r30
    1d3a:	d1 1d       	adc	r29, r1
    1d3c:	0f b6       	in	r0, 0x3f	; 63
    1d3e:	f8 94       	cli
    1d40:	de bf       	out	0x3e, r29	; 62
    1d42:	0f be       	out	0x3f, r0	; 63
    1d44:	cd bf       	out	0x3d, r28	; 61
    1d46:	ed 01       	movw	r28, r26
    1d48:	08 95       	ret

00001d4a <__umulhisi3>:
    1d4a:	a2 9f       	mul	r26, r18
    1d4c:	b0 01       	movw	r22, r0
    1d4e:	b3 9f       	mul	r27, r19
    1d50:	c0 01       	movw	r24, r0
    1d52:	a3 9f       	mul	r26, r19
    1d54:	70 0d       	add	r23, r0
    1d56:	81 1d       	adc	r24, r1
    1d58:	11 24       	eor	r1, r1
    1d5a:	91 1d       	adc	r25, r1
    1d5c:	b2 9f       	mul	r27, r18
    1d5e:	70 0d       	add	r23, r0
    1d60:	81 1d       	adc	r24, r1
    1d62:	11 24       	eor	r1, r1
    1d64:	91 1d       	adc	r25, r1
    1d66:	08 95       	ret

00001d68 <_exit>:
    1d68:	f8 94       	cli

00001d6a <__stop_program>:
    1d6a:	ff cf       	rjmp	.-2      	; 0x1d6a <__stop_program>
